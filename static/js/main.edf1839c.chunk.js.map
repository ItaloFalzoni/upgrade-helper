{"version":3,"sources":["releases/react-native/0.57.js","releases/react-native/0.58.js","releases/react-native/0.59.js","releases/react-native/0.60.js","releases/react-native/0.61.js","releases/react-native/0.62.js","releases/react-native/0.64.js","releases/react-native/0.68.js","releases/react-native/0.69.js","assets/logo.svg","releases sync /^/.//.*$","components/common/Select.js","components/common/UpgradeButton.js","utils.js","utils/update-url.js","utils/device-sizes.js","components/common/VersionSelector.js","hooks/fetch-release-versions.js","components/common/Diff/DiffCommentReminder.js","components/common/DownloadFileButton.js","components/common/ViewFileButton.js","components/common/Diff/DiffHeader.js","components/common/Markdown.js","components/common/Diff/DiffComment.js","components/common/Diff/Diff.js","components/common/Diff/DiffSection.js","components/common/Diff/DiffLoading.js","components/common/UpgradeSupportAlert.js","components/common/AppNameWarning.js","components/common/UsefulLinks.js","components/common/AlignDepsAlert.js","components/common/UsefulContentSection.js","components/common/BinaryDownload.js","components/common/Diff/DiffViewStyleOptions.js","components/common/CompletedFilesCounter.js","hooks/fetch-diff.js","components/common/DiffViewer.js","components/common/Settings.js","components/common/TroubleshootingGuides.js","components/common/TroubleshootingGuidesButton.js","components/pages/Home.js","hooks/get-package-name-from-url.js","hooks/get-language-from-url.js","App.jsx","serviceWorker.js","index.jsx","constants.js","releases/index.js","releases/__mocks__/index.js"],"names":["usefulContent","description","links","title","url","comments","fileName","lineNumber","lineChangeType","content","map","file","module","exports","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Option","AntdSelect","SelectBoxContainer","SelectBox","Select","options","props","size","option","key","value","testIDs","Container","Button","AntdButton","UpgradeButton","React","forwardRef","ref","onShowDiff","type","data-testid","onClick","getRNDiffRepository","packageName","RN_DIFF_REPOSITORIES","getReleasesFileURL","PACKAGE_NAMES","RNM","getDiffURL","language","fromVersion","toVersion","languageDir","RNW","getBinaryFileURL","version","path","branch","removeAppPathPrefix","appName","replace","RegExp","DEFAULT_APP_NAME","replaceWithProvidedAppName","toLowerCase","getVersionsContentInDiff","versions","cleanedToVersion","semver","valid","coerce","filter","cleanedVersion","compare","includes","getChangelogURL","RN_CHANGELOG_URLS","getTransitionDuration","duration","navigator","webdriver","SHOW_LATEST_RCS","updateURL","isPackageNameDefinedInURL","pageURL","window","location","href","search","newURL","packageNameInURL","languageInURL","history","replaceState","deviceSizes","Selectors","FromVersionSelector","ToVersionSelector","popover","cloneElement","children","compareReleaseCandidateVersions","versionToCompare","diff","getReleasedVersionsWithCandidates","releasedVersions","latestVersion","showReleaseCandidates","isToVersionAReleaseCandidate","prerelease","isLatestAReleaseCandidate","releasedVersion","checkIfVersionIsALatestRC","getReleasedVersions","minVersion","maxVersion","latestMajorReleaseVersion","find","patch","getLatestMajorReleaseVersion","length","lt","gt","getFirstMajorRelease","doesVersionExist","allVersions","_error","VersionSelector","showDiff","useState","isLoading","setIsLoading","isDone","setIsDone","undefined","releaseVersions","setReleaseVersions","useEffect","a","fetch","response","text","Boolean","split","fetchReleaseVersions","useFetchReleaseVersions","setAllVersions","fromVersionList","setFromVersionList","toVersionList","setToVersionList","hasVersionsFromURL","setHasVersionsFromURL","localFromVersion","setLocalFromVersion","localToVersion","setLocalToVersion","upgradeButtonEl","useRef","versionsInURL","queryString","parse","from","to","getVersionsInURL","hasFromVersionInURL","hasToVersionInURL","toVersionToBeSet","sanitizedVersions","fromVersionToBeSet","fetchVersions","current","loading","onChange","chosenVersion","visible","placement","DiffCommentReminder","isDiffCollapsed","uncollapseDiff","numberOfComments","isVisible","div","variants","opacity","cursor","invisible","animate","transition","InfoCircleOutlined","className","DownloadFileButton","console","info","shape","icon","DownloadOutlined","target","ViewFileButton","Wrapper","FileRenameArrow","RightOutlined","FileName","oldPath","newPath","FileStatus","color","add","modify","delete","rename","BinaryBadge","defaultIconButtonStyle","CompleteDiffButton","RollbackOutlined","CheckOutlined","isDiffCompleted","CopyPathToClipboardButton","onCopy","copyPathPopoverContent","resetCopyPathPopoverContent","trigger","overlayStyle","width","textAlign","CopyOutlined","onMouseOver","CollapseClickableArea","CollapseDiffButton","DownOutlined","DiffHeader","diffKey","hasDiff","setIsDiffCollapsed","onCompleteDiff","onCopyPathToClipboard","diffComments","sanitizedFilePaths","oldPathSanitized","newPathSanitized","getFilePathsToShow","altKey","Link","rel","stopPropagation","InlineCode","forceBlock","overrides","em","p","lineColors","neutral","isCommentVisible","height","hidden","initial","inherit","ContentContainer","ShowButton","scaleX","whileHover","scale","Content","Markdown","LINE_CHANGE_TYPES","ADD","DELETE","NEUTRAL","getComments","some","reduce","allComments","versionComments","toUpperCase","getLineNumberWithType","DiffComment","setIsCommentVisible","copyPathPopoverContentOpts","More","Decoration","DiffDecoration","DiffView","RDiff","memo","hunks","selectedChanges","onToggleChangeSelection","areAllCollapsed","setAllCollapsed","diffViewStyle","isDiffCollapsedByDefault","setCopyPathPopoverContent","getHunksWithAppName","useCallback","originalHunks","hunk","changes","change","collapse","viewType","diffType","widgets","optimizeSelection","updatedHunks","enhancers","markEdits","tokens","tokenize","gutterEvents","prevProps","nextProps","Title","DiffSection","getDiffKey","completedDiffs","isDoneSection","handleCompleteDiff","doneTitleRef","isUpgradingFrom61To62","isUpgradingFrom61","satisfies","isUpgradingTo62","getIsUpgradingFrom61To62","diffFile","match","oldRevision","newRevision","TitleLoader","speed","backgroundColor","foregroundColor","viewBox","rx","DiffLoader","x","y","motion","Header","DiffLoading","translateY","css","UpgradeSupportAlert","AppNameWarning","Separator","List","UsefulLinks","getChangelog","versionWithoutEndingZero","slice","this","hasMoreThanOneRelease","changelog","Component","AlignDepsAlert","InnerContainer","isContentVisible","h2","visibleContent","translateX","hiddenContent","Icon","role","aria-label","HideContentButton","toggleContentVisibility","UpOutlined","UsefulContentSection","state","handleToggleContentVisibility","setState","nextState","hasLoaded","hasContentBeenHidden","doesAnyVersionHaveUsefulLinks","BinaryRow","index","Popover","overlayClassName","BinaryList","binaryFiles","BinaryDownload","DiffViewStyleOptions","handleViewStyleChange","Group","shake","keyframes","CompletedFilesCounter","completed","total","popoverContent","popoverCursorType","position","active","config","elementCount","angle","startVelocity","delay","ms","Promise","res","setTimeout","TopContainer","withChangeSelect","multiple","shouldShowDiff","setDiff","all","parseDiff","sort","fetchDiff","useFetchDiff","setCompletedDiffs","isGoToDoneClicked","setIsGoToDoneClicked","donePopoverPossibleOpts","cursorType","donePopoverOpts","setDonePopoverOpts","localStorage","getItem","setViewStyle","diffSectionProps","prevCompletedDiffs","completedDiff","newViewStyle","setItem","style","marginTop","message","showIcon","closable","renderUpgradeDoneMessage","scrollTo","top","behavior","scrollIntoView","InputContainer","SettingsButton","SettingsIcon","PlatformsContainer","PackagesGroupContainer","Settings","handleSettingsChange","onChangePackageNameAndLanguage","onChangeAppName","popoverVisibility","setVisibility","newAppName","setNewAppName","newPackageName","setNewPackageName","newLanguage","setNewLanguage","checkboxValues","placeholder","RN","marginRight","WindowsFilled","margin","onVisibleChange","visibility","processedNewLanguage","LANGUAGE_NAMES","CPP","TROUBLESHOOTING_GUIDES","ListContainer","TroubleshootingGuides","isTooltipVisible","willHaveAnimation","containerAnimation","useAnimation","TroubleshootingGuidesButton","showContent","setShowContent","hasHandledClick","prevState","Page","Card","HeaderContainer","LogoImg","TitleHeader","TitleContainer","SettingsContainer","StarButton","Home","packageNameFromURL","URLSearchParams","get","packageNames","values","useGetPackageNameFromURL","defaultPackageName","defaultLanguage","languageFromURL","languageNames","useGetLanguageFromURL","setPackageName","setLanguage","setFromVersion","setToVersion","setShouldShowDiff","settings","setSettings","setAppName","ReactGA","initialize","pageview","alt","src","logo","homepage","data-icon","data-show-count","settingsValues","normalizedIncomingSettings","acc","val","localPackageName","localLanguage","App","hostname","container","document","getElementById","createRoot","render","serviceWorker","ready","then","registration","unregister","CS","versionsWithContent","getReleaseVersionFiles","require","default","jest","setMock"],"mappings":"wHAAA,OAAe,WACbA,cAAe,CACbC,YACE,mJACFC,MAAO,CACL,CACEC,MAAO,wDACPC,IACE,0G,iCCRV,OAAe,WACbJ,cAAe,CACbC,YACE,wMACFC,MAAO,CACL,CACEC,MAAO,wDACPC,IACE,0G,iCCRV,OAAe,WACbJ,cAAe,CACbC,YACE,+FACFC,MAAO,CACL,CACEC,MACE,kEACFC,IACE,sFAEJ,CACED,MAAO,wDACPC,IACE,0G,iCCdV,yBAEe,WACbJ,cAAe,CACbC,YACE,4IACFC,MAAO,CACL,CACEC,MACE,kEACFC,IACE,sEAEJ,CACED,MAAO,wDACPC,IACE,wGAIRC,SAAU,CACR,CACEC,SAAU,cACVC,WAAY,EACZC,eAAgB,MAChBC,QACE,YAAC,WAAD,sMAOJ,CACEH,SAAU,0CACVC,WAAY,EACZC,eAAgB,UAChBC,QACE,YAAC,WAAD,yJ,iCCtCR,OAAe,WACbT,cAAe,CACbC,YAAa,oDACbC,MAAO,CACL,CACEC,MACE,kEACFC,IACE,wEAEJ,CACED,MAAO,wDACPC,IACE,0G,iCCbV,yBAEe,WACbJ,cAAe,CACbC,YACE,gEACFC,MAAO,CACL,CACEC,MACE,kEACFC,IAAK,wDAEP,CACED,MAAO,wDACPC,IACE,sGAEJ,CACED,MACE,uEACFC,IACE,yEAIRC,SAAU,CACR,CACEC,SAAU,0CACVC,WAAY,GACZC,eAAgB,MAChBC,QACE,YAAC,WAAD,sJAOJ,CACEH,SAAU,2BACVC,WAAY,GACZC,eAAgB,UAChBC,QACE,YAAC,WAAD,4M,iCC3CR,yBAEe,WACbT,cAAe,CACbC,YACE,gEACFC,MAAO,CACL,CACEC,MACE,kEACFC,IAAK,0DAIXC,SAAU,CACR,CACEC,SAAU,eACVC,WAAY,GACZC,eAAgB,MAChBC,QACE,YAAC,WAAD,0O,kECJO,WACbT,cAAe,CACbC,YACE,qEACFC,MAAO,CACL,CACEC,MACE,qFACFC,IAAK,8DAIXC,SAAS,CACP,CACEC,SAAU,2BACVC,WAAY,IACZC,eAAgB,MAChBC,QACE,YAAC,WAAD,gIAMJ,CACEH,SAAU,2BACVC,WAAY,I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","file":"static/js/main.edf1839c.chunk.js","sourcesContent":["export default {\n  usefulContent: {\n    description:\n      'React Native 0.57 includes 599 commits by 73 different contributors, it has improvements to Accessibility APIs, Babel 7 stable support and more.',\n    links: [\n      {\n        title: '[External] Tutorial on upgrading to React Native 0.57',\n        url:\n          'https://reactnative.thenativebits.com/courses/upgrading-react-native/upgrade-to-react-native-0.57/'\n      }\n    ]\n  }\n}\n","export default {\n  usefulContent: {\n    description:\n      'React Native 0.58 is the first release of 2019, it includes work for modernizing and strengthening flow types for core components and  numerous crash fixes and resolutions for unexpected behaviors.',\n    links: [\n      {\n        title: '[External] Tutorial on upgrading to React Native 0.58',\n        url:\n          'https://reactnative.thenativebits.com/courses/upgrading-react-native/upgrade-to-react-native-0.58/'\n      }\n    ]\n  }\n}\n","export default {\n  usefulContent: {\n    description:\n      'React Native 0.59 includes React Hooks, performance gains on Android and lots of cool stuff.',\n    links: [\n      {\n        title:\n          'Official blog post about the major changes on React Native 0.59',\n        url:\n          'https://facebook.github.io/react-native/blog/2019/03/12/releasing-react-native-059'\n      },\n      {\n        title: '[External] Tutorial on upgrading to React Native 0.59',\n        url:\n          'https://reactnative.thenativebits.com/courses/upgrading-react-native/upgrade-to-react-native-0.59/'\n      }\n    ]\n  }\n}\n","import React, { Fragment } from 'react'\n\nexport default {\n  usefulContent: {\n    description:\n      'React Native 0.60 includes Cocoapods integration by default, AndroidX support, auto-linking libraries, a brand new Start screen and more.',\n    links: [\n      {\n        title:\n          'Official blog post about the major changes on React Native 0.60',\n        url:\n          'https://facebook.github.io/react-native/blog/2019/07/03/version-60'\n      },\n      {\n        title: '[External] Tutorial on upgrading to React Native 0.60',\n        url:\n          'https://reactnative.thenativebits.com/courses/upgrading-react-native/upgrade-to-react-native-0.60/'\n      }\n    ]\n  },\n  comments: [\n    {\n      fileName: 'ios/Podfile',\n      lineNumber: 4,\n      lineChangeType: 'add',\n      content: (\n        <Fragment>\n          All these libraries below have been removed from the Xcode project\n          file and now live in the Podfile. Cocoapods handles the linking now.\n          Here you can add more libraries with native modules.\n        </Fragment>\n      )\n    },\n    {\n      fileName: 'ios/RnDiffApp.xcodeproj/project.pbxproj',\n      lineNumber: 9,\n      lineChangeType: 'neutral',\n      content: (\n        <Fragment>\n          Click\n          [here](https://github.com/react-native-community/upgrade-support/issues/14)\n          for an explanation and some help with upgrading this file.\n        </Fragment>\n      )\n    }\n  ]\n}\n","export default {\n  usefulContent: {\n    description: 'React Native 0.61 includes Fast Refresh and more.',\n    links: [\n      {\n        title:\n          'Official blog post about the major changes on React Native 0.61',\n        url:\n          'https://facebook.github.io/react-native/blog/2019/09/18/version-0.61'\n      },\n      {\n        title: '[External] Tutorial on upgrading to React Native 0.61',\n        url:\n          'https://reactnative.thenativebits.com/courses/upgrading-react-native/upgrade-to-react-native-0.61/'\n      }\n    ]\n  }\n}\n","import React, { Fragment } from 'react'\n\nexport default {\n  usefulContent: {\n    description:\n      'React Native 0.62 includes built-in integration with Flipper.',\n    links: [\n      {\n        title:\n          'Official blog post about the major changes on React Native 0.62',\n        url: 'https://reactnative.dev/blog/2020/03/26/version-0.62'\n      },\n      {\n        title: '[External] Tutorial on upgrading to React Native 0.62',\n        url:\n          'https://reactnative.thenativebits.com/courses/upgrading-react-native/upgrade-to-react-native-0.62/'\n      },\n      {\n        title:\n          '[iOS] Tutorial on upgrading Xcode-related files to React Native 0.62',\n        url:\n          'https://github.com/react-native-community/upgrade-helper/issues/191'\n      }\n    ]\n  },\n  comments: [\n    {\n      fileName: 'ios/RnDiffApp.xcodeproj/project.pbxproj',\n      lineNumber: 19,\n      lineChangeType: 'add',\n      content: (\n        <Fragment>\n          Click\n          [here](https://github.com/react-native-community/upgrade-support/issues/13)\n          for an explanation and some help with upgrading this file.\n        </Fragment>\n      )\n    },\n    {\n      fileName: 'android/app/build.gradle',\n      lineNumber: 81,\n      lineChangeType: 'neutral',\n      content: (\n        <Fragment>\n          If you are using Hermes Engine and ProGuard, make sure to update the\n          rules in `proguard-rules.pro` to what is specified in the\n          [documentation](https://reactnative.dev/docs/hermes) for `0.62`.\n        </Fragment>\n      )\n    }\n  ]\n}\n","import React, { Fragment } from 'react'\n\nexport default {\n  usefulContent: {\n    description:\n      'React Native 0.64 includes Hermes opt-in on iOS and React 17.',\n    links: [\n      {\n        title:\n          'Official blog post about the major changes on React Native 0.64',\n        url: 'https://reactnative.dev/blog/2021/03/12/version-0.64'\n      }\n    ]\n  },\n  comments: [\n    {\n      fileName: 'package.json',\n      lineNumber: 14,\n      lineChangeType: 'add',\n      content: (\n        <Fragment>\n          If you have the `hermes-engine` dependency you need to upgrade to\n          0.7.2 [see release\n          here](https://github.com/facebook/hermes/releases/tag/v0.7.2) if you\n          are on a previous version you might get crashes at boot on Android.\n        </Fragment>\n      )\n    }\n  ]\n}\n","import React, { Fragment } from 'react'\n\nconst newArchitectureFiles = [\n  'android/app/src/main/java/com/rndiffapp/newarchitecture/MainApplicationReactNativeHost.java',\n  'android/app/src/main/java/com/rndiffapp/newarchitecture/components/MainComponentsRegistry.java',\n  'android/app/src/main/java/com/rndiffapp/newarchitecture/modules/MainApplicationTurboModuleManagerDelegate.java',\n  'android/app/src/main/jni/MainApplicationModuleProvider.h',\n  'android/app/src/main/jni/MainComponentsRegistry.cpp',\n  'android/app/src/main/jni/Android.mk',\n  'android/app/src/main/jni/MainApplicationModuleProvider.cpp',\n  'android/app/src/main/jni/MainApplicationTurboModuleManagerDelegate.cpp',\n  'android/app/src/main/jni/MainApplicationTurboModuleManagerDelegate.h',\n  'android/app/src/main/jni/MainComponentsRegistry.h',\n  'android/app/src/main/jni/OnLoad.cpp'\n]\n\nexport default {\n  usefulContent: {\n    description:\n      'React Native 0.68 includes preview of the New Architecture opt-in.',\n    links: [\n      {\n        title:\n          'See here to learn more about new architecture and how to enable it in your project',\n        url: 'https://reactnative.dev/docs/next/new-architecture-intro'\n      }\n    ]\n  },\n  comments: [\n    {\n      fileName: 'android/app/build.gradle',\n      lineNumber: 142,\n      lineChangeType: 'add',\n      content: (\n        <Fragment>\n          `isNewArchitectureEnabled()` and related logic is optional if you are\n          not planning to upgrade to the new architecture.\n        </Fragment>\n      )\n    },\n    {\n      fileName: 'android/app/build.gradle',\n      lineNumber: 283,\n      lineChangeType: 'add',\n      content: (\n        <Fragment>\n          `isNewArchitectureEnabled()` and related logic is optional if you are\n          not planning to upgrade to the new architecture.\n        </Fragment>\n      )\n    },\n    {\n      fileName: 'android/app/src/main/java/com/rndiffapp/MainActivity.java',\n      lineNumber: 36,\n      lineChangeType: 'add',\n      content: (\n        <Fragment>\n          New delegate and enabling Fabric in `ReactRootView` is only required\n          for the new architecture builds.\n        </Fragment>\n      )\n    },\n    {\n      fileName: 'ios/RnDiffApp/AppDelegate.mm',\n      lineNumber: 9,\n      lineChangeType: 'add',\n      content: (\n        <Fragment>\n          Parts under `RCT_NEW_ARCH_ENABLED` are only required for the new\n          architecture builds.\n        </Fragment>\n      )\n    },\n    ...newArchitectureFiles.map(file => ({\n      fileName: file,\n\n      lineNumber: 1,\n      lineChangeType: 'add',\n      content: (\n        <Fragment>\n          This file is only required for the New Architecture setup.\n        </Fragment>\n      )\n    }))\n  ]\n}\n","import React, { Fragment } from 'react'\n\nexport default {\n  usefulContent: {\n    description:\n      'React Native 0.69 includes a bundled version of the Hermes engine',\n    links: [\n      {\n        title: 'See here to learn more about bundled Hermes',\n        url: 'https://reactnative.dev/architecture/bundled-hermes'\n      }\n    ]\n  },\n  comments: [\n    {\n      fileName: 'android/app/build.gradle',\n      lineNumber: 280,\n      lineChangeType: 'add',\n      content: (\n        <Fragment>\n          These lines instruct Gradle to consume the bundled version of Hermes.\n          For further information on Bundled Hermes and how this mechanism\n          works, look\n          [here](https://reactnative.dev/architecture/bundled-hermes).\n        </Fragment>\n      )\n    }\n  ]\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.74ebf3f4.svg\";","var map = {\n\t\"./\": 60,\n\t\"./__mocks__\": 83,\n\t\"./__mocks__/\": 83,\n\t\"./__mocks__/index\": 83,\n\t\"./__mocks__/index.js\": 83,\n\t\"./index\": 60,\n\t\"./index.js\": 60,\n\t\"./react-native/0.57\": 139,\n\t\"./react-native/0.57.js\": 139,\n\t\"./react-native/0.58\": 140,\n\t\"./react-native/0.58.js\": 140,\n\t\"./react-native/0.59\": 141,\n\t\"./react-native/0.59.js\": 141,\n\t\"./react-native/0.60\": 142,\n\t\"./react-native/0.60.js\": 142,\n\t\"./react-native/0.61\": 143,\n\t\"./react-native/0.61.js\": 143,\n\t\"./react-native/0.62\": 144,\n\t\"./react-native/0.62.js\": 144,\n\t\"./react-native/0.64\": 145,\n\t\"./react-native/0.64.js\": 145,\n\t\"./react-native/0.68\": 146,\n\t\"./react-native/0.68.js\": 146,\n\t\"./react-native/0.69\": 147,\n\t\"./react-native/0.69.js\": 147\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 294;","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Select as AntdSelect } from 'antd'\n\nconst { Option } = AntdSelect\n\nconst SelectBoxContainer = styled.div`\n  width: 100%;\n`\nconst SelectBox = styled(AntdSelect)`\n  width: 100%;\n`\n\nconst Select = ({ title, options, ...props }) => (\n  <SelectBoxContainer>\n    <h4>{title}</h4>\n\n    <SelectBox size=\"large\" {...props}>\n      {options.map(option => (\n        <Option key={option} value={option}>\n          {option}\n        </Option>\n      ))}\n    </SelectBox>\n  </SelectBoxContainer>\n)\n\nexport default Select\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Button as AntdButton } from 'antd'\n\nexport const testIDs = {\n  upgradeButton: 'upgradeButton'\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  height: auto;\n  overflow: hidden;\n  margin-top: 25px;\n`\n\nconst Button = styled(AntdButton)`\n  border-radius: 3px;\n`\n\nconst UpgradeButton = React.forwardRef(({ onShowDiff, ...props }, ref) => (\n  <Container>\n    <Button\n      {...props}\n      ref={ref}\n      type=\"primary\"\n      size=\"large\"\n      data-testid={testIDs.upgradeButton}\n      onClick={onShowDiff}\n    >\n      Show me how to upgrade!\n    </Button>\n  </Container>\n))\n\nexport default UpgradeButton\n","import semver from 'semver/preload'\nimport {\n  RN_DIFF_REPOSITORIES,\n  DEFAULT_APP_NAME,\n  PACKAGE_NAMES,\n  RN_CHANGELOG_URLS\n} from './constants'\nimport versions from './releases'\n\nconst getRNDiffRepository = ({ packageName }) =>\n  RN_DIFF_REPOSITORIES[packageName]\n\nexport const getReleasesFileURL = ({ packageName }) =>\n  `https://raw.githubusercontent.com/${getRNDiffRepository({\n    packageName\n  })}/master/${packageName === PACKAGE_NAMES.RNM ? 'RELEASES_MAC' : 'RELEASES'}`\n\nexport const getDiffURL = ({\n  packageName,\n  language,\n  fromVersion,\n  toVersion\n}) => {\n  const languageDir =\n    packageName === PACKAGE_NAMES.RNM\n      ? 'mac/'\n      : packageName === PACKAGE_NAMES.RNW\n      ? `${language}/`\n      : ''\n\n  return `https://raw.githubusercontent.com/${getRNDiffRepository({\n    packageName\n  })}/diffs/diffs/${languageDir}${fromVersion}..${toVersion}.diff`\n}\n\n// `path` must contain `RnDiffApp` prefix\nexport const getBinaryFileURL = ({ packageName, language, version, path }) => {\n  const branch =\n    packageName === PACKAGE_NAMES.RNM\n      ? `mac/${version}`\n      : packageName === PACKAGE_NAMES.RNW\n      ? `${language}/${version}`\n      : version\n\n  return `https://github.com/${getRNDiffRepository({\n    packageName\n  })}/raw/release/${branch}/${path}`\n}\n\nexport const removeAppPathPrefix = (path, appName) =>\n  path.replace(new RegExp(`${appName || DEFAULT_APP_NAME}/`), '')\n\nexport const replaceWithProvidedAppName = (path, appName) => {\n  if (!appName) {\n    return path\n  }\n\n  return path\n    .replace(new RegExp(DEFAULT_APP_NAME, 'g'), appName)\n    .replace(\n      new RegExp(DEFAULT_APP_NAME.toLowerCase(), 'g'),\n      appName.toLowerCase()\n    )\n}\n\nexport const getVersionsContentInDiff = ({\n  packageName,\n  fromVersion,\n  toVersion\n}) => {\n  if (!versions[packageName]) {\n    return []\n  }\n\n  const cleanedToVersion = semver.valid(semver.coerce(toVersion))\n\n  return versions[packageName].filter(({ version }) => {\n    const cleanedVersion = semver.coerce(version)\n\n    // `cleanedVersion` can't be newer than `cleanedToVersion` nor older (or equal) than `fromVersion`\n    return (\n      semver.compare(cleanedToVersion, cleanedVersion) !== -1 &&\n      ![0, -1].includes(semver.compare(cleanedVersion, fromVersion))\n    )\n  })\n}\n\nexport const getChangelogURL = ({ version, packageName }) => {\n  if (packageName === PACKAGE_NAMES.RNW || packageName === PACKAGE_NAMES.RNM) {\n    return `${RN_CHANGELOG_URLS[packageName]}v${version}`\n  }\n\n  return `${RN_CHANGELOG_URLS[packageName]}#v${version.replace('.', '')}0`\n}\n\n// If the browser is headless (running puppeteer) then it doesn't have any duration\nexport const getTransitionDuration = duration =>\n  navigator.webdriver ? 0 : duration\n\n// settings constants\nexport const SHOW_LATEST_RCS = 'Show latest release candidates'\n\nexport const getFilePathsToShow = ({ oldPath, newPath, appName }) => {\n  const oldPathSanitized = replaceWithProvidedAppName(oldPath, appName)\n  const newPathSanitized = replaceWithProvidedAppName(newPath, appName)\n\n  return {\n    oldPath: removeAppPathPrefix(oldPathSanitized, appName),\n    newPath: removeAppPathPrefix(newPathSanitized, appName)\n  }\n}\n","import { PACKAGE_NAMES } from '../constants'\n\nexport function updateURL({\n  packageName,\n  language,\n  isPackageNameDefinedInURL,\n  fromVersion,\n  toVersion\n}) {\n  const pageURL = window.location.href.replace(window.location.search, '')\n\n  const newURL =\n    fromVersion !== '' || toVersion !== ''\n      ? `?from=${fromVersion}&to=${toVersion}`\n      : '?'\n  const packageNameInURL = isPackageNameDefinedInURL\n    ? `&package=${packageName}`\n    : ''\n  const languageInURL =\n    packageName === PACKAGE_NAMES.RNW ? `&language=${language}` : ''\n\n  window.history.replaceState(\n    null,\n    null,\n    `${pageURL}${newURL}${packageNameInURL}${languageInURL}`\n  )\n}\n","export const deviceSizes = {\n  tablet: '(min-width: 768px)'\n}\n","import React, { Fragment, useState, useEffect, useRef } from 'react'\nimport styled from '@emotion/styled'\nimport { Popover } from 'antd'\nimport semver from 'semver/preload'\nimport queryString from 'query-string'\nimport { Select } from './'\nimport UpgradeButton from './UpgradeButton'\nimport { useFetchReleaseVersions } from '../../hooks/fetch-release-versions'\nimport { updateURL } from '../../utils/update-url'\nimport { deviceSizes } from '../../utils/device-sizes'\n\nexport const testIDs = {\n  fromVersionSelector: 'fromVersionSelector',\n  toVersionSelector: 'toVersionSelector'\n}\n\nconst Selectors = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 15px;\n\n  @media ${deviceSizes.tablet} {\n    flex-direction: row;\n    gap: 0;\n  }\n`\n\nconst FromVersionSelector = styled(Select)`\n  @media ${deviceSizes.tablet} {\n    padding-right: 5px;\n  }\n`\n\nconst ToVersionSelector = styled(({ popover, ...props }) =>\n  popover ? (\n    React.cloneElement(popover, {\n      children: <Select {...props} />\n    })\n  ) : (\n    <Select {...props} />\n  )\n)`\n  @media ${deviceSizes.tablet} {\n    padding-left: 5px;\n  }\n`\n\nconst getVersionsInURL = () => {\n  // Parses `/?from=VERSION&to=VERSION` from URL\n  const { from: fromVersion, to: toVersion } = queryString.parse(\n    window.location.search\n  )\n\n  return {\n    fromVersion,\n    toVersion\n  }\n}\n\nconst compareReleaseCandidateVersions = ({ version, versionToCompare }) =>\n  ['prerelease', 'prepatch', null].includes(\n    semver.diff(version, versionToCompare)\n  )\n\nconst getLatestMajorReleaseVersion = releasedVersions =>\n  semver.valid(\n    semver.coerce(\n      releasedVersions.find(\n        releasedVersion =>\n          !semver.prerelease(releasedVersion) &&\n          semver.patch(releasedVersion) === 0\n      )\n    )\n  )\n\n// Check if `from` rc version is one of the latest major release (ie. 0.60.0)\nconst checkIfVersionIsALatestRC = ({ version, latestVersion }) =>\n  semver.prerelease(version) &&\n  compareReleaseCandidateVersions({\n    version: latestVersion,\n    versionToCompare: version\n  })\n\n// Filters out release candidates from `releasedVersion` with the\n// exception of the release candidates from the latest version\nconst getReleasedVersionsWithCandidates = ({\n  releasedVersions,\n  toVersion,\n  latestVersion,\n  showReleaseCandidates\n}) => {\n  const isToVersionAReleaseCandidate = semver.prerelease(toVersion) !== null\n  const isLatestAReleaseCandidate = semver.prerelease(latestVersion) !== null\n\n  return releasedVersions.filter(releasedVersion => {\n    // Show the release candidates of the latest version\n    const isLatestReleaseCandidate =\n      showReleaseCandidates &&\n      checkIfVersionIsALatestRC({\n        version: releasedVersion,\n        latestVersion\n      })\n\n    return (\n      isLatestReleaseCandidate ||\n      semver.prerelease(releasedVersion) === null ||\n      (isToVersionAReleaseCandidate &&\n        compareReleaseCandidateVersions({\n          version: toVersion,\n          versionToCompare: releasedVersion\n        })) ||\n      (isLatestAReleaseCandidate &&\n        compareReleaseCandidateVersions({\n          version: latestVersion,\n          versionToCompare: releasedVersion\n        }))\n    )\n  })\n}\n\nconst getReleasedVersions = ({ releasedVersions, minVersion, maxVersion }) => {\n  const latestMajorReleaseVersion = getLatestMajorReleaseVersion(\n    releasedVersions\n  )\n\n  const isVersionAReleaseAndOfLatest = version =>\n    version.includes('rc') &&\n    semver.valid(semver.coerce(version)) === latestMajorReleaseVersion\n\n  return releasedVersions.filter(\n    releasedVersion =>\n      releasedVersion.length > 0 &&\n      ((maxVersion && semver.lt(releasedVersion, maxVersion)) ||\n        (minVersion &&\n          semver.gt(releasedVersion, minVersion) &&\n          !isVersionAReleaseAndOfLatest(releasedVersion)))\n  )\n}\n\n// Finds the first minor release (which in react-native is the major) when compared to another version\nconst getFirstMajorRelease = ({ releasedVersions, versionToCompare }) =>\n  releasedVersions.find(\n    releasedVersion =>\n      semver.lt(releasedVersion, versionToCompare) &&\n      semver.diff(\n        semver.valid(semver.coerce(releasedVersion)),\n        semver.valid(semver.coerce(versionToCompare))\n      ) === 'minor'\n  )\n\n// Return if version exists in the ones returned from GitHub\nconst doesVersionExist = ({ version, allVersions, minVersion }) => {\n  try {\n    return (\n      version &&\n      allVersions.includes(version) &&\n      // Also compare the version against a `minVersion`, this is used\n      // to not allow the user to have a `fromVersion` newer than `toVersion`\n      (!minVersion || (minVersion && semver.gt(version, minVersion)))\n    )\n  } catch (_error) {\n    return false\n  }\n}\n\nconst VersionSelector = ({\n  packageName,\n  language,\n  isPackageNameDefinedInURL,\n  showDiff,\n  showReleaseCandidates\n}) => {\n  const { isLoading, isDone, releaseVersions } = useFetchReleaseVersions({\n    packageName\n  })\n  const [allVersions, setAllVersions] = useState([])\n  const [fromVersionList, setFromVersionList] = useState([])\n  const [toVersionList, setToVersionList] = useState([])\n  const [hasVersionsFromURL, setHasVersionsFromURL] = useState(false)\n\n  const [localFromVersion, setLocalFromVersion] = useState('')\n  const [localToVersion, setLocalToVersion] = useState('')\n\n  const upgradeButtonEl = useRef(null)\n\n  useEffect(() => {\n    const versionsInURL = getVersionsInURL()\n\n    const fetchVersions = async () => {\n      // Check if the versions provided in the URL are valid\n      const hasFromVersionInURL = doesVersionExist({\n        version: versionsInURL.fromVersion,\n        allVersions: releaseVersions\n      })\n\n      const hasToVersionInURL = doesVersionExist({\n        version: versionsInURL.toVersion,\n        allVersions: releaseVersions,\n        minVersion: versionsInURL.fromVersion\n      })\n\n      const latestVersion = releaseVersions[0]\n      // If the version from URL is not valid then fallback to the latest\n      const toVersionToBeSet = hasToVersionInURL\n        ? versionsInURL.toVersion\n        : latestVersion\n\n      // Remove `rc` versions from the array of versions\n      const sanitizedVersions = getReleasedVersionsWithCandidates({\n        releasedVersions: releaseVersions,\n        toVersion: toVersionToBeSet,\n        latestVersion,\n        showReleaseCandidates\n      })\n\n      setAllVersions(sanitizedVersions)\n\n      const fromVersionToBeSet = hasFromVersionInURL\n        ? versionsInURL.fromVersion\n        : // Get first major release before latest\n          getFirstMajorRelease({\n            releasedVersions: sanitizedVersions,\n            versionToCompare: toVersionToBeSet\n          })\n\n      setFromVersionList(\n        getReleasedVersions({\n          releasedVersions: sanitizedVersions,\n          maxVersion: toVersionToBeSet\n        })\n      )\n      setToVersionList(\n        getReleasedVersions({\n          releasedVersions: sanitizedVersions,\n          minVersion: fromVersionToBeSet\n        })\n      )\n\n      setLocalFromVersion(fromVersionToBeSet)\n      setLocalToVersion(toVersionToBeSet)\n\n      const doesHaveVersionsInURL = hasFromVersionInURL && hasToVersionInURL\n\n      setHasVersionsFromURL(doesHaveVersionsInURL)\n    }\n\n    if (isDone) {\n      fetchVersions()\n    }\n  }, [\n    isDone,\n    releaseVersions,\n    setLocalFromVersion,\n    setLocalToVersion,\n    showReleaseCandidates\n  ])\n\n  useEffect(() => {\n    if (isLoading) {\n      return\n    }\n\n    setFromVersionList(\n      getReleasedVersions({\n        releasedVersions: allVersions,\n        maxVersion: localToVersion\n      })\n    )\n    setToVersionList(\n      getReleasedVersions({\n        releasedVersions: allVersions,\n        minVersion: localFromVersion\n      })\n    )\n\n    if (hasVersionsFromURL) {\n      upgradeButtonEl.current.props.onClick()\n    }\n  }, [\n    isLoading,\n    allVersions,\n    localFromVersion,\n    localToVersion,\n    hasVersionsFromURL,\n    showReleaseCandidates\n  ])\n\n  const onShowDiff = () => {\n    showDiff({\n      fromVersion: localFromVersion,\n      toVersion: localToVersion\n    })\n\n    updateURL({\n      packageName,\n      language,\n      isPackageNameDefinedInURL,\n      fromVersion: localFromVersion,\n      toVersion: localToVersion\n    })\n  }\n\n  return (\n    <Fragment>\n      <Selectors>\n        <FromVersionSelector\n          data-testid={testIDs.fromVersionSelector}\n          title={`What's your current ${packageName} version?`}\n          loading={isLoading}\n          value={localFromVersion}\n          options={fromVersionList}\n          onChange={chosenVersion => setLocalFromVersion(chosenVersion)}\n        />\n\n        <ToVersionSelector\n          data-testid={testIDs.toVersionSelector}\n          title=\"To which version would you like to upgrade?\"\n          loading={isLoading}\n          value={localToVersion}\n          options={toVersionList}\n          popover={\n            localToVersion === '0.60.1' && (\n              <Popover\n                visible={true}\n                placement=\"topLeft\"\n                content=\"We recommend using the latest 0.60 patch release instead of 0.60.1.\"\n              />\n            )\n          }\n          onChange={chosenVersion => setLocalToVersion(chosenVersion)}\n        />\n      </Selectors>\n\n      <UpgradeButton ref={upgradeButtonEl} onShowDiff={onShowDiff} />\n    </Fragment>\n  )\n}\n\nexport default VersionSelector\n","import { useEffect, useState } from 'react'\nimport { getReleasesFileURL } from '../utils'\n\nexport const useFetchReleaseVersions = ({ packageName }) => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [isDone, setIsDone] = useState(false)\n  const [releaseVersions, setReleaseVersions] = useState(undefined)\n\n  useEffect(() => {\n    const fetchReleaseVersions = async () => {\n      setIsLoading(true)\n      setIsDone(false)\n\n      const response = await fetch(getReleasesFileURL({ packageName }))\n\n      const releaseVersions = (await response.text())\n        .split('\\n')\n        .filter(Boolean)\n\n      setReleaseVersions(releaseVersions)\n\n      setIsLoading(false)\n      setIsDone(true)\n\n      return\n    }\n\n    fetchReleaseVersions()\n  }, [packageName])\n\n  return {\n    isLoading,\n    isDone,\n    releaseVersions\n  }\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { motion } from 'framer-motion'\nimport { InfoCircleOutlined } from '@ant-design/icons'\nimport { getTransitionDuration } from '../../../utils'\n\nconst DiffCommentReminder = styled(\n  ({ comments, isDiffCollapsed, uncollapseDiff, ...props }) => {\n    const numberOfComments = Object.keys(comments).length\n    const isVisible = isDiffCollapsed && numberOfComments > 0\n\n    return (\n      <motion.div\n        {...props}\n        variants={{\n          visible: { opacity: 1, cursor: 'pointer' },\n          invisible: { opacity: 0, cursor: 'initial' }\n        }}\n        animate={isVisible > 0 ? 'visible' : 'invisible'}\n        transition={{\n          duration: getTransitionDuration(0.5)\n        }}\n        onClick={uncollapseDiff}\n      >\n        <InfoCircleOutlined className=\"icon\" />\n\n        <span className=\"reminder\">\n          {numberOfComments} hidden comment{numberOfComments > 1 && 's'}\n        </span>\n      </motion.div>\n    )\n  }\n)`\n  display: inline;\n  background-color: #fffbe6;\n  padding: 5px;\n  border-radius: 3px;\n  margin-left: 10px;\n  border: 1px solid #ffe58f;\n\n  & > .icon {\n    margin-right: 6px;\n  }\n\n  & > .reminder {\n    word-spacing: -2px;\n  }\n`\n\nexport default DiffCommentReminder\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Button } from 'antd'\nimport { DownloadOutlined } from '@ant-design/icons'\nimport { getBinaryFileURL } from '../../utils'\n\nconst DownloadFileButton = styled(\n  ({ visible, version, path, packageName, ...props }) => {\n    console.info(visible, version, path, packageName)\n    return visible ? (\n      <Button\n        {...props}\n        type=\"ghost\"\n        shape=\"circle\"\n        icon={<DownloadOutlined />}\n        target=\"_blank\"\n        href={getBinaryFileURL({ packageName, version, path })}\n      />\n    ) : null\n  }\n)`\n  color: #24292e;\n  font-size: 12px;\n  border-width: 0;\n  &:hover,\n  &:focus {\n    color: #24292e;\n  }\n`\n\nexport default DownloadFileButton\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Button } from 'antd'\nimport { getBinaryFileURL } from '../../utils'\n\nconst ViewFileButton = styled(\n  ({ visible, version, path, packageName, ...props }) => {\n    if (!visible) {\n      return null\n    }\n\n    return (\n      <Button\n        {...props}\n        type=\"link\"\n        target=\"_blank\"\n        href={getBinaryFileURL({ packageName, version, path })}\n      >\n        View file\n      </Button>\n    )\n  }\n)`\n  font-size: 12px;\n  color: #24292e;\n`\n\nexport default ViewFileButton\n","import React, { Fragment } from 'react'\nimport styled from '@emotion/styled'\nimport { Tag, Button, Popover } from 'antd'\nimport {\n  CheckOutlined,\n  DownOutlined,\n  RightOutlined,\n  CopyOutlined,\n  RollbackOutlined\n} from '@ant-design/icons'\nimport { getFilePathsToShow } from '../../../utils'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport DiffCommentReminder from './DiffCommentReminder'\nimport DownloadFileButton from '../DownloadFileButton'\nimport ViewFileButton from '../ViewFileButton'\n\nexport const testIDs = {\n  collapseClickableArea: 'collapseClickableArea'\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, Courier,\n    monospace;\n  font-size: 12px;\n  color: #24292e;\n  line-height: 32px;\n  background-color: #fafbfc;\n  border-bottom: 1px solid #e1e4e8;\n  border-top-left-radius: 2px;\n  border-top-right-radius: 2px;\n  padding: 5px 10px;\n  position: sticky;\n  top: 0;\n`\n\nconst FileRenameArrow = styled(RightOutlined)({\n  fontSize: '10px',\n  margin: '0 5px',\n  color: '#f78206'\n})\n\nconst FileName = ({ oldPath, newPath, type, appName }) => {\n  if (type === 'delete') {\n    return <span>{oldPath}</span>\n  }\n\n  if (oldPath !== newPath && type !== 'add') {\n    return (\n      <span>\n        {oldPath} <FileRenameArrow /> {newPath}\n      </span>\n    )\n  }\n\n  return <span>{newPath}</span>\n}\n\nconst FileStatus = ({ type, ...props }) => {\n  const colors = {\n    add: 'blue',\n    modify: 'green',\n    delete: 'red',\n    rename: 'orange'\n  }\n\n  const labels = {\n    add: 'ADDED',\n    modify: 'MODIFIED',\n    delete: 'DELETED',\n    rename: 'RENAMED'\n  }\n\n  return (\n    <Tag {...props} color={colors[type]}>\n      {labels[type]}\n    </Tag>\n  )\n}\n\nconst BinaryBadge = ({ visible, ...props }) =>\n  visible ? (\n    <Tag {...props} color=\"cyan\">\n      BINARY\n    </Tag>\n  ) : null\n\nconst defaultIconButtonStyle = `\n  font-size: 13px;\n  line-height: 0;\n  border-width: 0px;\n  width: 22px;\n  height: 22px;\n  margin: 5px 0;\n  border-radius: 50%;\n`\n\nconst CompleteDiffButton = styled(({ visible, onClick, ...props }) =>\n  visible ? (\n    <Button\n      {...props}\n      type=\"ghost\"\n      icon={<RollbackOutlined />}\n      onClick={onClick}\n    />\n  ) : (\n    <Button\n      {...props}\n      type=\"ghost\"\n      icon={<CheckOutlined />}\n      onClick={onClick}\n    />\n  )\n)`\n  ${defaultIconButtonStyle}\n  &,\n  &:hover,\n  &:focus {\n    color: ${({ isDiffCompleted }) =>\n      isDiffCompleted ? '#52c41a' : '#24292e'};\n  }\n`\n\nconst CopyPathToClipboardButton = styled(\n  ({\n    oldPath,\n    newPath,\n    type,\n    onCopy,\n    copyPathPopoverContent,\n    resetCopyPathPopoverContent,\n    ...props\n  }) => (\n    <CopyToClipboard text={type === 'add' ? newPath : oldPath} onCopy={onCopy}>\n      <Popover\n        content={copyPathPopoverContent}\n        trigger=\"hover\"\n        overlayStyle={{\n          width: '175px',\n          textAlign: 'center'\n        }}\n      >\n        <Button\n          {...props}\n          type=\"ghost\"\n          icon={<CopyOutlined />}\n          onMouseOver={resetCopyPathPopoverContent}\n        />\n      </Popover>\n    </CopyToClipboard>\n  )\n)`\n  ${defaultIconButtonStyle}\n`\n\nconst CollapseClickableArea = styled.div`\n  display: inline-block;\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst CollapseDiffButton = styled(({ visible, isDiffCollapsed, ...props }) =>\n  visible ? <Button {...props} type=\"link\" icon={<DownOutlined />} /> : null\n)`\n  color: #24292e;\n  margin-right: 2px;\n  font-size: 10px;\n  transform: ${({ isDiffCollapsed }) =>\n    isDiffCollapsed ? 'rotate(-90deg)' : 'initial'};\n  transition: transform 0.2s ease-in-out;\n  transform-origin: center;\n  line-height: 0;\n  height: auto;\n  &:hover,\n  &:focus {\n    color: #24292e;\n  }\n`\n\nconst DiffHeader = ({\n  oldPath,\n  newPath,\n  toVersion,\n  type,\n  diffKey,\n  hasDiff,\n  isDiffCollapsed,\n  setIsDiffCollapsed,\n  isDiffCompleted,\n  onCompleteDiff,\n  onCopyPathToClipboard,\n  copyPathPopoverContent,\n  resetCopyPathPopoverContent,\n  appName,\n  diffComments,\n  packageName,\n  ...props\n}) => {\n  const sanitizedFilePaths = getFilePathsToShow({ oldPath, newPath, appName })\n\n  return (\n    <Wrapper {...props}>\n      <div>\n        <CollapseClickableArea\n          data-testid={testIDs.collapseClickableArea}\n          onClick={({ altKey }) => setIsDiffCollapsed(!isDiffCollapsed, altKey)}\n        >\n          <CollapseDiffButton\n            visible={hasDiff}\n            isDiffCollapsed={isDiffCollapsed}\n          />\n          <FileName\n            oldPath={sanitizedFilePaths.oldPath}\n            newPath={sanitizedFilePaths.newPath}\n            type={type}\n            appName={appName}\n          />{' '}\n          <FileStatus type={type} />\n          <BinaryBadge visible={!hasDiff} />\n        </CollapseClickableArea>\n        <CopyPathToClipboardButton\n          oldPath={sanitizedFilePaths.oldPath}\n          newPath={sanitizedFilePaths.newPath}\n          type={type}\n          onCopy={onCopyPathToClipboard}\n          copyPathPopoverContent={copyPathPopoverContent}\n          resetCopyPathPopoverContent={resetCopyPathPopoverContent}\n        />\n\n        <DiffCommentReminder\n          comments={diffComments}\n          isDiffCollapsed={isDiffCollapsed}\n          uncollapseDiff={() => setIsDiffCollapsed(false)}\n        />\n      </div>\n      <div>\n        <Fragment>\n          <ViewFileButton\n            visible={hasDiff && type !== 'delete'}\n            version={toVersion}\n            path={newPath}\n            packageName={packageName}\n          />\n          <DownloadFileButton\n            visible={!hasDiff && type !== 'delete'}\n            version={toVersion}\n            path={newPath}\n            packageName={packageName}\n          />\n          <CompleteDiffButton\n            visible={isDiffCompleted}\n            onClick={() => onCompleteDiff(diffKey)}\n          />\n        </Fragment>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default DiffHeader\n","import React from 'react'\nimport Markdown from 'markdown-to-jsx'\nimport styled from '@emotion/styled'\n\nexport const Link = styled(props => (\n  // eslint-disable-next-line jsx-a11y/anchor-has-content\n  <a\n    target=\"_blank\"\n    {...props}\n    rel=\"noopener\"\n    onClick={e => e.stopPropagation()}\n  />\n))`\n  text-decoration: none;\n  color: #045dc1;\n`\n\nconst InlineCode = styled.em`\n  font-style: normal;\n  background-color: rgba(27, 31, 35, 0.07);\n  border-radius: 3px;\n  font-size: 85%;\n  margin: 0;\n  padding: 0.2em 0.4em;\n`\n\nexport default ({ forceBlock = false, options = {}, ...props }) => (\n  <Markdown\n    {...props}\n    options={{\n      ...options,\n      forceBlock,\n      overrides: {\n        ...options.overrides,\n        a: Link,\n        em: InlineCode,\n        code: InlineCode,\n        p: styled.p`\n          margin-bottom: 0;\n        `\n      }\n    }}\n  />\n)\n","import React, { useState } from 'react'\nimport styled from '@emotion/styled'\nimport { motion } from 'framer-motion'\nimport { removeAppPathPrefix, getVersionsContentInDiff } from '../../../utils'\nimport Markdown from '../Markdown'\n\nconst lineColors = {\n  add: '#d6fedb',\n  delete: '#fdeff0',\n  neutral: '#ffffff'\n}\n\nconst Container = styled(({ isCommentVisible, children, ...props }) => (\n  <motion.div\n    {...props}\n    variants={{\n      visible: {\n        height: 'auto'\n      },\n      hidden: { height: 10 }\n    }}\n    initial={isCommentVisible ? 'visible' : 'hidden'}\n    animate={isCommentVisible ? 'visible' : 'hidden'}\n    transition={{\n      duration: 0.5\n    }}\n    inherit={false}\n  >\n    <div children={children} />\n  </motion.div>\n))`\n  overflow: hidden;\n\n  & > div {\n    display: flex;\n    flex-direction: row;\n    background-color: ${({ lineChangeType }) => lineColors[lineChangeType]};\n    cursor: pointer;\n  }\n`\n\nconst ContentContainer = styled.div`\n  flex: 1;\n  position: relative;\n  padding: 16px;\n  color: #000;\n  background-color: #fffbe6;\n  user-select: none;\n`\n\nconst ShowButton = styled(({ isCommentVisible, ...props }) => (\n  <motion.div\n    {...props}\n    variants={{\n      visible: {\n        scaleX: 1\n      },\n      hidden: { scaleX: 10 }\n    }}\n    whileHover={{\n      scale: 2\n    }}\n    initial={isCommentVisible ? 'visible' : 'hidden'}\n    animate={isCommentVisible ? 'visible' : 'hidden'}\n    transition={{\n      duration: 0.25\n    }}\n  />\n))`\n  background-color: #ffe58f;\n  margin-left: 20px;\n  width: 10px;\n  cursor: pointer;\n`\n\nconst Content = styled(Markdown)`\n  opacity: 1;\n  ${({ isCommentVisible }) =>\n    !isCommentVisible &&\n    `\n      opacity: 0;\n    `}\n  transition: opacity 0.25s ease-out;\n`\n\nconst LINE_CHANGE_TYPES = {\n  ADD: 'I',\n  DELETE: 'D',\n  NEUTRAL: 'N'\n}\n\nconst getLineNumberWithType = ({ lineChangeType, lineNumber }) =>\n  `${LINE_CHANGE_TYPES[lineChangeType.toUpperCase()]}${lineNumber}`\n\nconst getComments = ({ packageName, newPath, fromVersion, toVersion }) => {\n  const newPathSanitized = removeAppPathPrefix(newPath)\n\n  const versionsInDiff = getVersionsContentInDiff({\n    packageName,\n    fromVersion,\n    toVersion\n  }).filter(\n    ({ comments }) =>\n      comments &&\n      comments.length > 0 &&\n      comments.some(({ fileName }) => fileName === newPathSanitized)\n  )\n\n  return versionsInDiff.reduce((allComments, version) => {\n    const comments = version.comments.reduce(\n      (versionComments, { fileName, lineChangeType, lineNumber, content }) => {\n        if (fileName !== newPathSanitized) {\n          return versionComments\n        }\n\n        return {\n          ...versionComments,\n          [getLineNumberWithType({ lineChangeType, lineNumber })]: (\n            <DiffComment content={content} lineChangeType={lineChangeType} />\n          )\n        }\n      },\n      {}\n    )\n\n    return {\n      ...allComments,\n      ...comments\n    }\n  }, {})\n}\n\nconst DiffComment = ({ content, lineChangeType }) => {\n  const [isCommentVisible, setIsCommentVisible] = useState(true)\n\n  return (\n    <Container\n      isCommentVisible={isCommentVisible}\n      lineChangeType={lineChangeType}\n      onClick={() => setIsCommentVisible(!isCommentVisible)}\n    >\n      <ShowButton\n        isCommentVisible={isCommentVisible}\n        onClick={() => setIsCommentVisible(!isCommentVisible)}\n      />\n\n      <ContentContainer>\n        <Content isCommentVisible={isCommentVisible}>\n          {content.props.children}\n        </Content>\n      </ContentContainer>\n    </Container>\n  )\n}\n\nexport { getComments }\nexport default DiffComment\n","import React, { useState, useCallback } from 'react'\nimport styled from '@emotion/styled'\nimport {\n  Diff as RDiff,\n  Hunk,\n  markEdits,\n  tokenize,\n  Decoration as DiffDecoration\n} from 'react-diff-view'\nimport DiffHeader from './DiffHeader'\nimport { getComments } from './DiffComment'\nimport { replaceWithProvidedAppName } from '../../../utils'\n\nconst copyPathPopoverContentOpts = {\n  default: 'Click to copy file path',\n  copied: 'File path copied!'\n}\n\nconst Container = styled.div`\n  border: 1px solid #e8e8e8;\n  border-radius: 3px;\n  margin-bottom: 16px;\n  margin-top: 16px;\n`\n\nconst More = styled.div`\n  background-color: #f1f8ff;\n  margin-left: 30px;\n  padding-left: 4px;\n  color: '#1b1f23b3';\n`\n\nconst Decoration = styled(DiffDecoration)`\n  background-color: #dbedff;\n`\n\nconst DiffView = styled(RDiff)`\n  .diff-gutter-col {\n    width: 30px;\n  }\n\n  tr.diff-line {\n    font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, Courier,\n      monospace;\n  }\n\n  td.diff-gutter {\n    color: rgba(27, 31, 35, 0.3);\n    padding: 0;\n    text-align: center;\n    font-size: 12px;\n    cursor: auto;\n  }\n\n  td.diff-gutter .diff-line-normal {\n    background-color: #cdffd8;\n    border-color: #bef5cb;\n  }\n\n  td.diff-gutter:hover {\n    cursor: pointer;\n    color: rgba(27, 31, 35, 0.6);\n  }\n\n  td.diff-code {\n    font-size: 12px;\n    color: #24292e;\n  }\n\n  td.diff-code-insert .diff-code-edit {\n    background-color: #acf2bd;\n  }\n\n  td.diff-gutter-omit:before {\n    width: 0;\n    background-color: transparent;\n  }\n\n  td.diff-widget-content {\n    padding: 0;\n  }\n`\n\n// Diff will be collapsed by default if the file has been deleted or has more than 5 hunks\nconst isDiffCollapsedByDefault = ({ type, hunks }) =>\n  type === 'delete' || hunks.length > 5 ? true : undefined\n\nconst Diff = ({\n  packageName,\n  oldPath,\n  newPath,\n  type,\n  hunks,\n  fromVersion,\n  toVersion,\n  diffKey,\n  isDiffCompleted,\n  onCompleteDiff,\n  selectedChanges,\n  onToggleChangeSelection,\n  areAllCollapsed,\n  setAllCollapsed,\n  diffViewStyle,\n  appName\n}) => {\n  const [isDiffCollapsed, setIsDiffCollapsed] = useState(\n    isDiffCollapsedByDefault({ type, hunks })\n  )\n\n  const [copyPathPopoverContent, setCopyPathPopoverContent] = useState(\n    copyPathPopoverContentOpts.default\n  )\n\n  const handleCopyPathToClipboard = () => {\n    setCopyPathPopoverContent(copyPathPopoverContentOpts.copied)\n  }\n\n  const handleResetCopyPathPopoverContent = () => {\n    if (copyPathPopoverContent === copyPathPopoverContentOpts.copied) {\n      setCopyPathPopoverContent(copyPathPopoverContentOpts.default)\n    }\n  }\n\n  const getHunksWithAppName = useCallback(\n    originalHunks => {\n      if (!appName) {\n        return originalHunks\n      }\n\n      return originalHunks.map(hunk => ({\n        ...hunk,\n        changes: hunk.changes.map(change => ({\n          ...change,\n          content: replaceWithProvidedAppName(change.content, appName)\n        }))\n      }))\n    },\n    [appName]\n  )\n\n  if (areAllCollapsed !== undefined && areAllCollapsed !== isDiffCollapsed) {\n    setIsDiffCollapsed(areAllCollapsed)\n  } else if (isDiffCompleted && isDiffCollapsed === undefined) {\n    setIsDiffCollapsed(true)\n  }\n\n  const diffComments = getComments({\n    packageName,\n    newPath,\n    fromVersion,\n    toVersion,\n    appName\n  })\n\n  return (\n    <Container>\n      <DiffHeader\n        oldPath={oldPath}\n        newPath={newPath}\n        toVersion={toVersion}\n        type={type}\n        diffKey={diffKey}\n        hasDiff={hunks.length > 0}\n        isDiffCollapsed={isDiffCollapsed}\n        setIsDiffCollapsed={(collapse, altKey) => {\n          if (altKey) {\n            return setAllCollapsed(collapse)\n          }\n\n          setAllCollapsed(undefined)\n          setIsDiffCollapsed(collapse)\n        }}\n        isDiffCompleted={isDiffCompleted}\n        onCopyPathToClipboard={handleCopyPathToClipboard}\n        copyPathPopoverContent={copyPathPopoverContent}\n        resetCopyPathPopoverContent={handleResetCopyPathPopoverContent}\n        onCompleteDiff={onCompleteDiff}\n        appName={appName}\n        diffComments={diffComments}\n        packageName={packageName}\n      />\n\n      {!isDiffCollapsed && (\n        <DiffView\n          viewType={diffViewStyle}\n          diffType={type}\n          hunks={hunks}\n          widgets={diffComments}\n          optimizeSelection={true}\n          selectedChanges={selectedChanges}\n        >\n          {originalHunks => {\n            const updatedHunks = getHunksWithAppName(originalHunks)\n\n            const options = {\n              enhancers: [markEdits(updatedHunks)]\n            }\n\n            const tokens = tokenize(updatedHunks, options)\n\n            return updatedHunks.map(hunk => [\n              <Decoration key={'decoration-' + hunk.content}>\n                <More>{hunk.content}</More>\n              </Decoration>,\n              <Hunk\n                key={hunk.content}\n                hunk={hunk}\n                tokens={tokens}\n                gutterEvents={{ onClick: onToggleChangeSelection }}\n              />\n            ])\n          }}\n        </DiffView>\n      )}\n    </Container>\n  )\n}\n\n/*\n  Return true if passing `nextProps` to render would return\n  the same result as passing prevProps to render, otherwise return false\n*/\nconst arePropsEqual = (prevProps, nextProps) =>\n  prevProps.isDiffCompleted === nextProps.isDiffCompleted &&\n  prevProps.areAllCollapsed === nextProps.areAllCollapsed &&\n  prevProps.diffViewStyle === nextProps.diffViewStyle &&\n  prevProps.appName === nextProps.appName\n\nexport default React.memo(Diff, arePropsEqual)\n","import React, { useState, useCallback } from 'react'\nimport styled from '@emotion/styled'\nimport semver from 'semver'\nimport Diff from './Diff'\n\nexport const testIDs = {\n  diffSection: 'diffSection'\n}\n\nconst Title = styled.h1`\n  margin-top: 0.5em;\n`\n\nconst DiffSection = ({\n  packageName,\n  diff,\n  getDiffKey,\n  title,\n  completedDiffs,\n  isDoneSection,\n  fromVersion,\n  toVersion,\n  handleCompleteDiff,\n  selectedChanges,\n  onToggleChangeSelection,\n  diffViewStyle,\n  appName,\n  doneTitleRef\n}) => {\n  const [areAllCollapsed, setAllCollapsed] = useState(undefined)\n\n  const getIsUpgradingFrom61To62 = useCallback(() => {\n    const isUpgradingFrom61 = semver.satisfies(\n      fromVersion,\n      '>= 0.61.0 <= 0.62.0'\n    )\n\n    const isUpgradingTo62 = semver.satisfies(toVersion, '>= 0.62.0 <= 0.63.0')\n\n    return isUpgradingFrom61 && isUpgradingTo62\n  }, [fromVersion, toVersion])\n\n  const isUpgradingFrom61To62 = getIsUpgradingFrom61To62()\n\n  return (\n    <div data-testid={testIDs.diffSection}>\n      {title && completedDiffs.length > 0 && (\n        <Title ref={doneTitleRef}>{title}</Title>\n      )}\n\n      {diff.map(diffFile => {\n        const diffKey = getDiffKey(diffFile)\n        const isDiffCompleted = completedDiffs.includes(diffKey)\n\n        // If it's the \"done\" section, it shouldn't show if it's not completed\n        if (isDoneSection !== isDiffCompleted) {\n          return null\n        }\n\n        // This is here because there was a change in the line-endings of the\n        // `gradlew.bat` from version 0.61 to 0.62 which showed the entire file\n        // as a big change\n        if (\n          isUpgradingFrom61To62 &&\n          diffFile.oldPath.match(/gradlew.bat/) &&\n          diffFile.newPath.match(/gradlew.bat/)\n        ) {\n          return null\n        }\n\n        return (\n          <Diff\n            key={`${diffFile.oldRevision}${diffFile.newRevision}`}\n            {...diffFile}\n            packageName={packageName}\n            // otakustay/react-diff-view#49\n            type={diffFile.type === 'new' ? 'add' : diffFile.type}\n            diffKey={diffKey}\n            diffViewStyle={diffViewStyle}\n            fromVersion={fromVersion}\n            toVersion={toVersion}\n            isDiffCompleted={completedDiffs.includes(diffKey)}\n            onCompleteDiff={handleCompleteDiff}\n            selectedChanges={selectedChanges}\n            onToggleChangeSelection={onToggleChangeSelection}\n            areAllCollapsed={areAllCollapsed}\n            setAllCollapsed={setAllCollapsed}\n            appName={appName}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default DiffSection\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { motion } from 'framer-motion'\nimport ContentLoader from 'react-content-loader'\nimport { getTransitionDuration } from '../../../utils'\n\nconst TitleLoader = () => (\n  <ContentLoader\n    speed={1}\n    backgroundColor=\"#eee\"\n    foregroundColor=\"#e6e6e6\"\n    viewBox=\"0 0 400 100\"\n  >\n    <rect width=\"250\" height=\"6\" rx=\"1.5\" />\n  </ContentLoader>\n)\n\nconst DiffLoader = () => (\n  <ContentLoader\n    speed={1}\n    backgroundColor=\"#eee\"\n    foregroundColor=\"#e6e6e6\"\n    viewBox=\"0 0 400 100\"\n  >\n    <rect x=\"0\" y=\"10\" width=\"47%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"200\" y=\"10\" width=\"41%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"0\" y=\"18\" width=\"43%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"200\" y=\"34\" width=\"40%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"200\" y=\"42\" width=\"45%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"0\" y=\"42\" width=\"40%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"0\" y=\"50\" width=\"44%\" height=\"6\" rx=\"1.5\" />\n  </ContentLoader>\n)\n\nconst Container = styled(motion.div)`\n  margin-top: 16px;\n  border: 1px solid #e8e8e8;\n  border-radius: 3px;\n`\n\nconst Header = styled.div({\n  color: '#24292e',\n  backgroundColor: '#fafbfc',\n  padding: '10px',\n  height: '40px'\n})\n\nconst DiffLoading = () => (\n  <Container\n    initial={{ opacity: 0, translateY: 100 }}\n    animate={{ opacity: 1, translateY: 0 }}\n    transition={{ duration: getTransitionDuration(0.5) }}\n  >\n    <Header>\n      <TitleLoader />\n    </Header>\n    <div\n      css={{\n        padding: '5px 10px'\n      }}\n    >\n      <DiffLoader />\n    </div>\n  </Container>\n)\n\nexport default DiffLoading\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Tooltip } from 'antd'\n\nconst UpgradeSupportAlert = styled(props => (\n  <div {...props}>\n    <span>\n      Check out{' '}\n      <Tooltip\n        placement=\"bottom\"\n        title=\"Upgrade Support is a community-backed place to request and give help when upgrading your app.\"\n      >\n        <a\n          href=\"https://github.com/react-native-community/upgrade-support\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          {...props}\n        >\n          Upgrade Support\n        </a>\n      </Tooltip>{' '}\n      if you are experiencing issues related to React Native during the\n      upgrading process.\n    </span>\n  </div>\n))`\n  span > a {\n    color: #045dc1;\n\n    &:hover {\n      color: #40a9ff;\n    }\n  }\n`\n\nexport default UpgradeSupportAlert\n","import React from 'react'\nimport Markdown from './Markdown'\n\nconst AppNameWarning = () => (\n  <Markdown>\n    Keep in mind that `RnDiffApp` and `rndiffapp` are placeholders. When\n    upgrading, you should replace them with your actual project's name. You can\n    also provide your app name by clicking the settings icon on the top right.\n  </Markdown>\n)\n\nexport default AppNameWarning\n","import React, { Component, Fragment } from 'react'\nimport styled from '@emotion/styled'\nimport { getChangelogURL } from '../../utils'\nimport { Link } from './Markdown'\nimport { PACKAGE_NAMES } from '../../constants'\n\nconst Separator = styled.hr`\n  margin: 15px 0;\n  background-color: #e1e4e8;\n  height: 0.25em;\n  border: 0;\n`\n\nconst List = styled.ol`\n  padding-inline-start: 18px;\n  margin: 10px 0 0;\n`\n\nclass UsefulLinks extends Component {\n  getChangelog = ({ version }) => {\n    const { packageName, toVersion } = this.props\n\n    if (\n      packageName === PACKAGE_NAMES.RNW ||\n      packageName === PACKAGE_NAMES.RNM\n    ) {\n      return {\n        title: `React Native ${\n          packageName === PACKAGE_NAMES.RNW ? 'Windows' : 'macOS'\n        } ${toVersion} changelog`,\n        url: getChangelogURL({\n          packageName,\n          version: toVersion\n        }),\n        version: toVersion\n      }\n    }\n\n    const versionWithoutEndingZero = version.slice(0, 4)\n\n    return {\n      title: `React Native ${versionWithoutEndingZero} changelog`,\n      url: getChangelogURL({\n        packageName,\n        version: versionWithoutEndingZero\n      }),\n      version: versionWithoutEndingZero\n    }\n  }\n\n  render() {\n    const { versions } = this.props\n\n    const doesAnyVersionHaveUsefulContent = versions.some(\n      ({ usefulContent }) => !!usefulContent\n    )\n\n    if (!doesAnyVersionHaveUsefulContent) {\n      return null\n    }\n\n    const hasMoreThanOneRelease = versions.length > 1\n\n    return (\n      <>\n        {versions.map(({ usefulContent, version }, key) => {\n          const changelog = this.getChangelog({ version })\n\n          const links = [...usefulContent.links, changelog]\n\n          return (\n            <Fragment key={key}>\n              {key > 0 && <Separator />}\n\n              {hasMoreThanOneRelease && <h3>Release {changelog.version}</h3>}\n\n              <span>{usefulContent.description}</span>\n\n              <List>\n                {links.map(({ url, title }, key) => (\n                  <li key={`${url}${key}`}>\n                    <Link href={url}>{title}</Link>\n                  </li>\n                ))}\n              </List>\n            </Fragment>\n          )\n        })}\n        <Separator />\n      </>\n    )\n  }\n}\n\nexport default UsefulLinks\n","import React from 'react'\nimport Markdown from './Markdown'\n\nconst AlignDepsAlert = () => (\n  <>\n    <Markdown>\n      You can use the following command to kick off the upgrade: `npx\n      @rnx-kit/align-deps --requirements react-native@[major.minor]`.\n    </Markdown>\n    <br />\n    <Markdown>\n      `align-deps` is an OSS tool from Microsoft that automates dependency\n      management. It knows which packages\\* versions are compatible with your\n      specific version of RN, and it uses that knowledge to align dependencies,\n      keeping your app healthy and up-to-date\\*\\*. [Find out more\n      here](https://microsoft.github.io/rnx-kit/docs/guides/dependency-management).\n    </Markdown>\n    <br />\n    <Markdown>\\* Not all packages are supported out-of-the-box.</Markdown>\n    <br />\n    <Markdown>\n      \\*\\* You still need to do the other changes below and verify the\n      changelogs of the libraries that got upgraded.\n    </Markdown>\n  </>\n)\n\nexport default AlignDepsAlert\n","import React, { Component } from 'react'\nimport styled from '@emotion/styled'\nimport { UpOutlined, DownOutlined } from '@ant-design/icons'\nimport { Button } from 'antd'\nimport { motion } from 'framer-motion'\n\nimport {\n  getVersionsContentInDiff,\n  getChangelogURL,\n  getTransitionDuration\n} from '../../utils'\nimport UpgradeSupportAlert from './UpgradeSupportAlert'\nimport AppNameWarning from './AppNameWarning'\nimport UsefulLinks from './UsefulLinks'\nimport AlignDepsAlert from './AlignDepsAlert'\n\nimport { PACKAGE_NAMES } from '../../constants'\n\nconst Container = styled.div`\n  position: relative;\n  margin-top: 16px;\n  color: rgba(0, 0, 0, 0.65);\n  overflow: hidden;\n`\n\nconst InnerContainer = styled.div`\n  color: rgba(0, 0, 0, 0.65);\n  background-color: #fffbe6;\n  border-width: 1px;\n  border-left-width: 7px;\n  border-color: #ffe58f;\n  border-style: solid;\n  border-radius: 3px;\n  transition: padding 0.25s ease-out;\n`\n\nconst Title = styled(({ isContentVisible, ...props }) => (\n  <motion.h2\n    {...props}\n    variants={{\n      visibleContent: {\n        translateX: 0,\n        translateY: 0\n      },\n      hiddenContent: {\n        translateX: -5,\n        translateY: -10\n      }\n    }}\n    initial={isContentVisible ? 'visibleContent' : 'hiddenContent'}\n    animate={isContentVisible ? 'visibleContent' : 'hiddenContent'}\n    transition={{\n      duration: getTransitionDuration(0.25)\n    }}\n    inherit={false}\n  />\n))`\n  font-size: 17px;\n  cursor: pointer;\n  margin: 0px;\n  padding: 18px 0px 0px 14px;\n`\n\nconst ContentContainer = styled(({ isContentVisible, children, ...props }) => (\n  <motion.div\n    {...props}\n    variants={{\n      visible: {\n        opacity: 1,\n        height: 'auto',\n        translateY: 0\n      },\n      hidden: { opacity: 0, height: 0, translateY: -20 }\n    }}\n    initial={isContentVisible ? 'visible' : 'hidden'}\n    animate={isContentVisible ? 'visible' : 'hidden'}\n    transition={{\n      duration: getTransitionDuration(0.25)\n    }}\n    inherit={false}\n  >\n    <div children={children} />\n  </motion.div>\n))`\n  & > div {\n    padding: 15px 24px 19px;\n  }\n`\n\nconst Icon = styled(props => (\n  <span {...props} role=\"img\" aria-label=\"Megaphone emoji\">\n    📣\n  </span>\n))`\n  margin: 0px 10px;\n`\n\nconst HideContentButton = styled(\n  ({ toggleContentVisibility, isContentVisible, ...props }) => (\n    <Button\n      {...props}\n      type=\"link\"\n      icon={isContentVisible ? <UpOutlined /> : <DownOutlined />}\n      onClick={toggleContentVisibility}\n    />\n  )\n)`\n  float: right;\n  position: absolute;\n  top: 11px;\n  right: 12px;\n  font-size: 12px;\n  border-width: 0px;\n  width: 20px;\n  height: 20px;\n  color: rgba(0, 0, 0, 0.45);\n  &:hover,\n  &:focus {\n    color: #24292e;\n  }\n`\n\nconst Separator = styled.hr`\n  margin: 15px 0;\n  background-color: #e1e4e8;\n  height: 0.25em;\n  border: 0;\n`\n\nclass UsefulContentSection extends Component {\n  state = {\n    isContentVisible: true\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Only re-render component if it has reloaded the diff on the parent\n    const hasLoaded = this.props.isLoading && !nextProps.isLoading\n    // or if the content has been hidden\n    const hasContentBeenHidden =\n      this.state.isContentVisible !== nextState.isContentVisible\n\n    return hasLoaded || hasContentBeenHidden\n  }\n\n  handleToggleContentVisibility = () =>\n    this.setState(({ isContentVisible }) => ({\n      isContentVisible: !isContentVisible\n    }))\n\n  getChangelog = ({ version }) => {\n    const { packageName, toVersion } = this.props\n\n    if (\n      packageName === PACKAGE_NAMES.RNW ||\n      packageName === PACKAGE_NAMES.RNM\n    ) {\n      return {\n        title: `React Native ${\n          packageName === PACKAGE_NAMES.RNW ? 'Windows' : 'macOS'\n        } ${toVersion} changelog`,\n        url: getChangelogURL({\n          packageName,\n          version: toVersion\n        }),\n        version: toVersion\n      }\n    }\n\n    const versionWithoutEndingZero = version.slice(0, 4)\n\n    return {\n      title: `React Native ${versionWithoutEndingZero} changelog`,\n      url: getChangelogURL({\n        packageName,\n        version: versionWithoutEndingZero\n      }),\n      version: versionWithoutEndingZero\n    }\n  }\n\n  render() {\n    const { packageName, fromVersion, toVersion } = this.props\n    const { isContentVisible } = this.state\n\n    const versions = getVersionsContentInDiff({\n      packageName,\n      fromVersion,\n      toVersion\n    })\n\n    const doesAnyVersionHaveUsefulLinks = versions.some(\n      ({ usefulContent }) => !!usefulContent\n    )\n\n    return (\n      <Container isContentVisible={isContentVisible}>\n        <InnerContainer isContentVisible={isContentVisible}>\n          <Title\n            isContentVisible={isContentVisible}\n            onClick={this.handleToggleContentVisibility}\n          >\n            <Icon /> Useful content for upgrading\n          </Title>\n\n          <HideContentButton\n            isContentVisible={isContentVisible}\n            toggleContentVisibility={this.handleToggleContentVisibility}\n          />\n\n          <ContentContainer isContentVisible={isContentVisible}>\n            {doesAnyVersionHaveUsefulLinks ? (\n              <UsefulLinks packageName={packageName} versions={versions} />\n            ) : null}\n\n            <AlignDepsAlert />\n\n            <Separator />\n\n            <UpgradeSupportAlert />\n\n            <Separator />\n\n            <AppNameWarning />\n          </ContentContainer>\n        </InnerContainer>\n      </Container>\n    )\n  }\n}\n\nexport default UsefulContentSection\n","import React from 'react'\nimport { Button, Popover as AntdPopover, Tooltip } from 'antd'\nimport styled from '@emotion/styled'\nimport DownloadFileButton from './DownloadFileButton'\nimport { removeAppPathPrefix } from '../../utils'\n\nconst Container = styled.div`\n  padding-right: 10px;\n`\n\nconst BinaryRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${({ index }) => (index % 2 === 0 ? '#fafbfc' : '#ffffff')};\n  color: #24292e;\n  font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, Courier,\n    monospace;\n  font-size: 12px;\n  width: 500px;\n  max-width: 500px;\n  padding: 10px 15px;\n  border-bottom: 1px solid #e1e4e8;\n`\n\nconst Popover = styled(({ className, ...props }) => (\n  <AntdPopover overlayClassName={className} {...props} />\n))`\n  .ant-popover-inner-content {\n    padding: 0;\n    background: red;\n  }\n`\n\nconst BinaryList = ({ binaryFiles, toVersion, appName, packageName }) =>\n  binaryFiles.map(({ newPath }, index) => {\n    return (\n      <BinaryRow key={index} index={index}>\n        {removeAppPathPrefix(newPath, appName)}\n\n        <DownloadFileButton\n          visible={true}\n          version={toVersion}\n          path={newPath}\n          packageName={packageName}\n        />\n      </BinaryRow>\n    )\n  })\n\nconst BinaryDownload = ({\n  diff,\n  fromVersion,\n  toVersion,\n  appName,\n  packageName\n}) => {\n  const binaryFiles = diff.filter(\n    ({ hunks, type }) => hunks.length === 0 && type !== 'delete'\n  )\n\n  if (binaryFiles.length === 0) {\n    return null\n  }\n\n  return (\n    <Container>\n      <Popover\n        placement=\"bottomRight\"\n        content={\n          <BinaryList\n            binaryFiles={binaryFiles}\n            toVersion={toVersion}\n            appName={appName}\n            packageName={packageName}\n          />\n        }\n        trigger=\"click\"\n      >\n        <Tooltip\n          placement=\"top\"\n          title=\"Binaries updated within the version range\"\n        >\n          <Button>Binaries</Button>\n        </Tooltip>\n      </Popover>\n    </Container>\n  )\n}\n\nexport default BinaryDownload\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Radio } from 'antd'\n\nconst DiffViewStyleOptions = styled(\n  ({ handleViewStyleChange, diffViewStyle }) => (\n    <Radio.Group value={diffViewStyle}>\n      <Radio.Button\n        value=\"split\"\n        onChange={() => handleViewStyleChange('split')}\n      >\n        Split\n      </Radio.Button>\n      <Radio.Button\n        value=\"unified\"\n        onChange={() => handleViewStyleChange('unified')}\n      >\n        Unified\n      </Radio.Button>\n    </Radio.Group>\n  )\n)`\n  float: right;\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 12px;\n  border-width: 0px;\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n  &,\n  &:hover,\n  &:focus {\n    color: #24292e;\n  }\n`\nexport default DiffViewStyleOptions\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { keyframes, css } from '@emotion/core'\nimport Confetti from 'react-dom-confetti'\nimport { Popover } from 'antd'\n\nconst shake = keyframes`\n  0% {\n    transform: translate(0, 0);\n  }\n\n  10%, 90% {\n    transform: translate(0, -2px);\n  }\n\n  20%, 80% {\n    transform: translate(0, 3px);\n  }\n\n  30%, 50%, 70% {\n    transform: translate(0, -5px);\n  }\n\n  40%, 60% {\n    transform: translate(0, 5px);\n  }\n`\n\nconst CompletedFilesCounter = styled(\n  ({ completed, total, popoverContent, popoverCursorType, ...props }) => (\n    <div {...props}>\n      <Popover\n        content={popoverContent}\n        trigger=\"hover\"\n        placement=\"right\"\n        overlayStyle={{\n          position: 'fixed'\n        }}\n      >\n        <span className=\"completedAmount\">\n          {completed === 0 ? 1 : completed}\n        </span>{' '}\n        /{total}\n      </Popover>\n      <Confetti\n        active={completed === total}\n        config={{\n          elementCount: 200,\n          angle: 130,\n          startVelocity: 30\n        }}\n      />\n    </div>\n  )\n)`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background: #d5eafd;\n  padding: 10px;\n  border: 1px solid #1890ff;\n  border-radius: 20px;\n  color: #7dadda;\n  transform: ${({ completed }) =>\n    completed ? 'translateY(0px)' : 'translateY(70px)'};\n  display: flex;\n  align-self: flex-end;\n  transition: transform 0.3s;\n  cursor: ${({ popoverCursorType }) => popoverCursorType};\n  ${({ completed, total }) =>\n    completed === total &&\n    css`\n      transform: translateY(70px);\n      animation: ${shake};\n      animation-duration: 1.5s;\n    `}\n\n  .completedAmount {\n    color: #1890ff;\n  }\n`\n\nexport default CompletedFilesCounter\n","import { useEffect, useState } from 'react'\nimport { parseDiff } from 'react-diff-view'\nimport { getDiffURL } from '../utils'\n\nconst delay = ms => new Promise(res => setTimeout(res, ms))\n\nconst movePackageJsonToTop = parsedDiff =>\n  parsedDiff.sort(({ newPath }) => (newPath.includes('package.json') ? -1 : 1))\n\nexport const useFetchDiff = ({\n  shouldShowDiff,\n  packageName,\n  language,\n  fromVersion,\n  toVersion\n}) => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [isDone, setIsDone] = useState(false)\n  const [diff, setDiff] = useState(undefined)\n\n  useEffect(() => {\n    const fetchDiff = async () => {\n      setIsLoading(true)\n      setIsDone(false)\n\n      const [response] = await Promise.all([\n        fetch(getDiffURL({ packageName, language, fromVersion, toVersion })),\n        delay(300)\n      ])\n\n      const diff = await response.text()\n\n      setDiff(movePackageJsonToTop(parseDiff(diff)))\n\n      setIsLoading(false)\n      setIsDone(true)\n\n      return\n    }\n\n    if (shouldShowDiff) {\n      fetchDiff()\n    }\n  }, [shouldShowDiff, packageName, language, fromVersion, toVersion])\n\n  return {\n    isLoading,\n    isDone,\n    diff\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport styled from '@emotion/styled'\nimport { Alert } from 'antd'\nimport { motion, AnimatePresence, AnimateSharedLayout } from 'framer-motion'\nimport { withChangeSelect } from 'react-diff-view'\nimport 'react-diff-view/style/index.css'\nimport { getTransitionDuration } from '../../utils'\nimport DiffSection from './Diff/DiffSection'\nimport DiffLoading from './Diff/DiffLoading'\nimport UsefulContentSection from './UsefulContentSection'\nimport BinaryDownload from './BinaryDownload'\nimport ViewStyleOptions from './Diff/DiffViewStyleOptions'\nimport CompletedFilesCounter from './CompletedFilesCounter'\nimport { useFetchDiff } from '../../hooks/fetch-diff'\n\nconst Container = styled.div`\n  width: 90%;\n`\n\nconst TopContainer = styled.div`\n  display: flex;\n  position: relative;\n  border-width: 1px;\n  margin-top: 16px;\n  flex-direction: row;\n  justify-content: flex-end;\n`\n\nconst getDiffKey = ({ oldRevision, newRevision }) =>\n  `${oldRevision}${newRevision}`\n\nconst scrollToRef = ref => ref.current.scrollIntoView({ behavior: 'smooth' })\n\nconst DiffViewer = ({\n  packageName,\n  language,\n  fromVersion,\n  toVersion,\n  shouldShowDiff,\n  selectedChanges,\n  onToggleChangeSelection,\n  appName\n}) => {\n  const { isLoading, isDone, diff } = useFetchDiff({\n    shouldShowDiff,\n    packageName,\n    language,\n    fromVersion,\n    toVersion\n  })\n  const [completedDiffs, setCompletedDiffs] = useState([])\n  const [isGoToDoneClicked, setIsGoToDoneClicked] = useState(false)\n  const donePopoverPossibleOpts = {\n    done: {\n      content: 'Scroll to Done section',\n      cursorType: 's-resize'\n    },\n    top: {\n      content: 'Scroll to Top',\n      cursorType: 'n-resize'\n    }\n  }\n  const [donePopoverOpts, setDonePopoverOpts] = useState(\n    donePopoverPossibleOpts.done\n  )\n  const doneTitleRef = useRef(null)\n\n  const scrollToDone = () => scrollToRef(doneTitleRef)\n  const scrollToTop = () => window.scrollTo({ top: 0, behavior: 'smooth' })\n\n  const handleCompletedFilesCounterClick = () => {\n    setIsGoToDoneClicked(!isGoToDoneClicked)\n    if (isGoToDoneClicked) {\n      setDonePopoverOpts(donePopoverPossibleOpts.done)\n      scrollToTop()\n    } else {\n      setDonePopoverOpts(donePopoverPossibleOpts.top)\n      scrollToDone()\n    }\n  }\n\n  const handleCompleteDiff = diffKey => {\n    if (completedDiffs.includes(diffKey)) {\n      return setCompletedDiffs(prevCompletedDiffs =>\n        prevCompletedDiffs.filter(completedDiff => completedDiff !== diffKey)\n      )\n    }\n\n    setCompletedDiffs(prevCompletedDiffs => [...prevCompletedDiffs, diffKey])\n  }\n\n  const renderUpgradeDoneMessage = ({ diff, completedDiffs }) =>\n    diff.length === completedDiffs.length && (\n      <Alert\n        style={{ marginTop: 16 }}\n        message=\"Your upgrade is done 🎉🎉\"\n        type=\"success\"\n        showIcon\n        closable\n      />\n    )\n\n  const resetCompletedDiffs = () => setCompletedDiffs([])\n\n  const [diffViewStyle, setViewStyle] = useState(\n    localStorage.getItem('viewStyle') || 'split'\n  )\n\n  const handleViewStyleChange = newViewStyle => {\n    setViewStyle(newViewStyle)\n    localStorage.setItem('viewStyle', newViewStyle)\n  }\n\n  useEffect(() => {\n    if (!isDone) {\n      resetCompletedDiffs()\n    }\n  }, [isDone])\n\n  if (!shouldShowDiff) {\n    return null\n  }\n\n  if (isLoading) {\n    return (\n      <Container>\n        <AnimatePresence>\n          <DiffLoading />\n        </AnimatePresence>\n      </Container>\n    )\n  }\n\n  const diffSectionProps = {\n    diff: diff,\n    getDiffKey: getDiffKey,\n    completedDiffs: completedDiffs,\n    fromVersion: fromVersion,\n    toVersion: toVersion,\n    handleCompleteDiff: handleCompleteDiff,\n    selectedChanges: selectedChanges,\n    onToggleChangeSelection: onToggleChangeSelection\n  }\n\n  return (\n    <Container>\n      <AnimateSharedLayout>\n        <motion.div\n          initial={{ opacity: 0, translateY: 75 }}\n          animate={{ opacity: 1, translateY: 0 }}\n          transition={{ duration: getTransitionDuration(0.5) }}\n        >\n          <UsefulContentSection\n            isLoading={isLoading}\n            packageName={packageName}\n            fromVersion={fromVersion}\n            toVersion={toVersion}\n          />\n\n          <TopContainer>\n            <BinaryDownload\n              diff={diff}\n              fromVersion={fromVersion}\n              toVersion={toVersion}\n              appName={appName}\n              packageName={packageName}\n            />\n\n            <ViewStyleOptions\n              handleViewStyleChange={handleViewStyleChange}\n              diffViewStyle={diffViewStyle}\n            />\n          </TopContainer>\n\n          <DiffSection\n            {...diffSectionProps}\n            packageName={packageName}\n            isDoneSection={false}\n            diffViewStyle={diffViewStyle}\n            appName={appName}\n          />\n\n          {renderUpgradeDoneMessage({ diff, completedDiffs })}\n\n          <DiffSection\n            {...diffSectionProps}\n            packageName={packageName}\n            isDoneSection={true}\n            title=\"Done\"\n            appName={appName}\n            doneTitleRef={doneTitleRef}\n          />\n        </motion.div>\n      </AnimateSharedLayout>\n\n      <CompletedFilesCounter\n        completed={completedDiffs.length}\n        total={diff.length}\n        onClick={handleCompletedFilesCounterClick}\n        popoverContent={donePopoverOpts.content}\n        popoverCursorType={donePopoverOpts.cursorType}\n      />\n    </Container>\n  )\n}\n\nexport default withChangeSelect({ multiple: true })(DiffViewer)\n","import React, { useState } from 'react'\nimport { Popover, Button, Checkbox, Input, Radio } from 'antd'\nimport { SHOW_LATEST_RCS } from '../../utils'\nimport styled from '@emotion/styled'\nimport { WindowsFilled } from '@ant-design/icons'\nimport { PACKAGE_NAMES, LANGUAGE_NAMES } from '../../constants'\n\nconst InputContainer = styled.div({\n  marginTop: '16px'\n})\n\nconst SettingsButton = styled(Button)`\n  color: initial;\n`\n\nconst SettingsIcon = styled(props => <span {...props}>⚙️</span>)`\n  font-family: initial;\n`\n\nconst PlatformsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  margin-top: 12px;\n`\n\nconst PackagesGroupContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n`\n\nconst Settings = ({\n  handleSettingsChange,\n  packageName,\n  language,\n  onChangePackageNameAndLanguage,\n  appName,\n  onChangeAppName\n}) => {\n  const [popoverVisibility, setVisibility] = useState(false)\n  const [newAppName, setNewAppName] = useState(appName)\n  const [newPackageName, setNewPackageName] = useState(packageName)\n  const [newLanguage, setNewLanguage] = useState(language)\n\n  const handleClickChange = visibility => {\n    setVisibility(visibility)\n\n    if (newAppName !== appName) {\n      onChangeAppName(newAppName)\n    }\n\n    const processedNewLanguage =\n      newLanguage !== language && newPackageName === PACKAGE_NAMES.RNW\n        ? newLanguage\n        : LANGUAGE_NAMES.CPP\n\n    if (\n      !visibility &&\n      (newPackageName !== packageName || processedNewLanguage !== language)\n    ) {\n      onChangePackageNameAndLanguage({\n        newPackageName:\n          newPackageName !== packageName ? newPackageName : undefined,\n        newLanguage: processedNewLanguage\n      })\n    }\n  }\n\n  const updateCheckboxValues = checkboxValues =>\n    handleSettingsChange(checkboxValues)\n\n  return (\n    <Popover\n      placement=\"bottomRight\"\n      content={\n        <>\n          <Checkbox.Group onChange={updateCheckboxValues}>\n            <div>\n              <Checkbox value={SHOW_LATEST_RCS}>{SHOW_LATEST_RCS}</Checkbox>\n            </div>\n          </Checkbox.Group>\n          <InputContainer>\n            <h4>What's your app name?</h4>\n            <Input\n              value={newAppName}\n              onChange={({ target }) => setNewAppName(target.value)}\n              placeholder=\"MyAwesomeApp\"\n            />\n          </InputContainer>\n          <PlatformsContainer>\n            <h5>Upgrading another platform?</h5>\n            <Radio.Group\n              value={newPackageName}\n              onChange={e => setNewPackageName(e.target.value)}\n            >\n              <PackagesGroupContainer>\n                <Radio value={PACKAGE_NAMES.RN}>react-native</Radio>\n                <Radio value={PACKAGE_NAMES.RNW}>\n                  <Radio.Group\n                    size=\"small\"\n                    value={\n                      newPackageName === PACKAGE_NAMES.RNW\n                        ? newLanguage\n                        : undefined\n                    }\n                    onChange={e => {\n                      setNewPackageName(PACKAGE_NAMES.RNW)\n                      setNewLanguage(e.target.value)\n                    }}\n                  >\n                    <span style={{ marginRight: 10 }}>\n                      react-native-windows\n                      <WindowsFilled style={{ margin: 5 }} />\n                    </span>\n                    <Radio.Button value=\"cpp\">C++</Radio.Button>\n                    <Radio.Button value=\"cs\">C#</Radio.Button>\n                  </Radio.Group>\n                </Radio>\n                <Radio value={PACKAGE_NAMES.RNM}>react-native-macos</Radio>\n              </PackagesGroupContainer>\n            </Radio.Group>\n          </PlatformsContainer>\n        </>\n      }\n      trigger=\"click\"\n      visible={popoverVisibility}\n      onVisibleChange={handleClickChange}\n    >\n      <SettingsButton icon={<SettingsIcon />} />\n    </Popover>\n  )\n}\n\nexport default Settings\n","import React, { useRef } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from './Markdown'\nimport { motion, useAnimation } from 'framer-motion'\n\nconst TROUBLESHOOTING_GUIDES = [\n  {\n    title: 'Xcode 12.5',\n    href: 'https://github.com/facebook/react-native/issues/31480'\n  },\n  {\n    title: 'Apple Silicon (M1)',\n    href: 'https://github.com/facebook/react-native/issues/31941'\n  }\n]\n\nconst Container = styled(motion.div)`\n  width: 250px;\n`\n\nconst Content = styled(motion.div)`\n  h4 {\n    border-bottom: 1px solid #e8e8e8;\n    padding-bottom: 6px;\n  }\n`\n\nconst ListContainer = styled.ul`\n  padding-left: 13px;\n  margin-bottom: 0;\n  list-style: disc;\n`\n\nconst TroubleshootingGuides = ({ isTooltipVisible }) => {\n  const willHaveAnimation = useRef(isTooltipVisible)\n\n  const containerAnimation = useAnimation()\n\n  return (\n    <Container\n      willHaveAnimation={willHaveAnimation.current}\n      animate={containerAnimation}\n    >\n      <Content>\n        <h4>Troubleshooting guides</h4>\n        <ListContainer>\n          {TROUBLESHOOTING_GUIDES.map(({ title, href }) => (\n            <li key={href}>\n              <Link href={href}>{title}</Link>\n            </li>\n          ))}\n        </ListContainer>\n      </Content>\n    </Container>\n  )\n}\n\nexport { TroubleshootingGuides }\n","import React, { useRef, useState } from 'react'\nimport { Button as AntdButton, Popover } from 'antd'\nimport styled from '@emotion/styled'\nimport { TroubleshootingGuides } from './TroubleshootingGuides'\n\nexport const testIDs = {\n  troubleshootingGuidesButton: 'troubleshootingGuidesButton'\n}\n\nconst Icon = styled.span`\n  font-family: initial;\n`\n\nconst Button = styled(AntdButton)`\n  width: 32px;\n  padding: 0;\n  color: initial;\n`\n\nconst TroubleshootingGuidesButton = () => {\n  const [showContent, setShowContent] = useState(false)\n  const hasHandledClick = useRef(false)\n\n  const handlePopoverVisibilityChange = visibility => {\n    if (hasHandledClick.current) {\n      return\n    }\n\n    setShowContent(false)\n  }\n\n  const handleToggleShowContent = () => {\n    hasHandledClick.current = true\n\n    setShowContent(prevState => !prevState)\n\n    setTimeout(() => {\n      hasHandledClick.current = false\n    }, 0)\n  }\n\n  return (\n    <Popover\n      placement=\"bottomRight\"\n      content={<TroubleshootingGuides isTooltipVisible={showContent} />}\n      trigger=\"click\"\n      visible={showContent}\n      onVisibleChange={handlePopoverVisibilityChange}\n    >\n      <Button\n        data-testid={testIDs.troubleshootingGuidesButton}\n        onClick={handleToggleShowContent}\n      >\n        <Icon role=\"img\">⚠️</Icon>\n      </Button>\n    </Popover>\n  )\n}\n\nexport { TroubleshootingGuidesButton }\n","import React, { useState, useEffect } from 'react'\nimport styled from '@emotion/styled'\nimport { Card } from 'antd'\nimport GitHubButton from 'react-github-btn'\nimport ReactGA from 'react-ga'\nimport VersionSelector from '../common/VersionSelector'\nimport DiffViewer from '../common/DiffViewer'\nimport Settings from '../common/Settings'\nimport { homepage } from '../../../package.json'\nimport logo from '../../assets/logo.svg'\nimport { SHOW_LATEST_RCS } from '../../utils'\nimport { useGetLanguageFromURL } from '../../hooks/get-language-from-url'\nimport { useGetPackageNameFromURL } from '../../hooks/get-package-name-from-url'\nimport { PACKAGE_NAMES } from '../../constants'\nimport { TroubleshootingGuidesButton } from '../common/TroubleshootingGuidesButton'\nimport { updateURL } from '../../utils/update-url'\nimport { deviceSizes } from '../../utils/device-sizes'\n\nconst Page = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding-top: 30px;\n`\n\nconst Container = styled(Card)`\n  width: 90%;\n  border-radius: 3px;\n  border-color: #e8e8e8;\n`\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media ${deviceSizes.tablet} {\n    flex-direction: row;\n  }\n`\n\nconst LogoImg = styled.img`\n  width: 50px;\n  margin-bottom: 15px;\n\n  @media ${deviceSizes.tablet} {\n    width: 100px;\n  }\n`\n\nconst TitleHeader = styled.h1`\n  margin: 0;\n  margin-left: 15px;\n`\n\nconst TitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n`\n\nconst SettingsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n  margin-bottom: 8px;\n  flex: 1;\n`\n\nconst StarButton = styled(({ className, ...props }) => (\n  <div className={className}>\n    <GitHubButton {...props} />\n  </div>\n))`\n  margin-top: 10px;\n  margin-left: 15px;\n  margin-right: auto;\n`\n\nconst Home = () => {\n  const {\n    packageName: defaultPackageName,\n    isPackageNameDefinedInURL\n  } = useGetPackageNameFromURL()\n  const defaultLanguage = useGetLanguageFromURL()\n  const [packageName, setPackageName] = useState(defaultPackageName)\n  const [language, setLanguage] = useState(defaultLanguage)\n  const [fromVersion, setFromVersion] = useState('')\n  const [toVersion, setToVersion] = useState('')\n  const [shouldShowDiff, setShouldShowDiff] = useState(false)\n  const [settings, setSettings] = useState({\n    [`${SHOW_LATEST_RCS}`]: false\n  })\n  const [appName, setAppName] = useState('')\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      ReactGA.initialize('UA-136307971-1')\n      ReactGA.pageview('/')\n    }\n  }, [])\n\n  const handleShowDiff = ({ fromVersion, toVersion }) => {\n    if (fromVersion === toVersion) {\n      return\n    }\n\n    setFromVersion(fromVersion)\n    setToVersion(toVersion)\n    setShouldShowDiff(true)\n  }\n\n  const handlePackageNameAndLanguageChange = ({\n    newPackageName,\n    newLanguage\n  }) => {\n    let localPackageName =\n      newPackageName === undefined ? packageName : newPackageName\n    let localLanguage = newLanguage === undefined ? language : newLanguage\n\n    updateURL({\n      packageName: localPackageName,\n      language: localLanguage,\n      isPackageNameDefinedInURL:\n        isPackageNameDefinedInURL || newPackageName !== undefined,\n      toVersion: '',\n      fromVersion: ''\n    })\n    setPackageName(localPackageName)\n    setLanguage(localLanguage)\n    setFromVersion('')\n    setToVersion('')\n    setShouldShowDiff(false)\n  }\n\n  const handleSettingsChange = settingsValues => {\n    const normalizedIncomingSettings = settingsValues.reduce((acc, val) => {\n      acc[val] = true\n      return acc\n    }, {})\n\n    setSettings(normalizedIncomingSettings)\n  }\n\n  return (\n    <Page>\n      <Container>\n        <HeaderContainer>\n          <TitleContainer>\n            <LogoImg\n              alt=\"React Native Upgrade Helper logo\"\n              title=\"React Native Upgrade Helper logo\"\n              src={logo}\n            />\n            <a href={homepage}>\n              <TitleHeader>React Native Upgrade Helper</TitleHeader>\n            </a>\n          </TitleContainer>\n\n          <SettingsContainer>\n            <StarButton\n              href=\"https://github.com/react-native-community/upgrade-helper\"\n              data-icon=\"octicon-star\"\n              data-show-count=\"true\"\n              aria-label=\"Star react-native-community/upgrade-helper on GitHub\"\n            >\n              Star\n            </StarButton>\n            {packageName === PACKAGE_NAMES.RN && (\n              <TroubleshootingGuidesButton />\n            )}\n            <Settings\n              handleSettingsChange={handleSettingsChange}\n              appName={appName}\n              packageName={packageName}\n              onChangePackageNameAndLanguage={\n                handlePackageNameAndLanguageChange\n              }\n              language={language}\n              onChangeAppName={setAppName}\n            />\n          </SettingsContainer>\n        </HeaderContainer>\n\n        <VersionSelector\n          key={packageName}\n          showDiff={handleShowDiff}\n          showReleaseCandidates={settings[SHOW_LATEST_RCS]}\n          packageName={packageName}\n          language={language}\n          isPackageNameDefinedInURL={isPackageNameDefinedInURL}\n        />\n      </Container>\n      <DiffViewer\n        shouldShowDiff={shouldShowDiff}\n        fromVersion={fromVersion}\n        toVersion={toVersion}\n        appName={appName}\n        packageName={packageName}\n        language={language}\n      />\n    </Page>\n  )\n}\n\nexport default Home\n","import { PACKAGE_NAMES } from '../constants'\n\nexport const useGetPackageNameFromURL = () => {\n  const urlParams = new URLSearchParams(window.location.search)\n\n  const packageNameFromURL = urlParams.get('package')\n  const packageNames = Object.values(PACKAGE_NAMES)\n\n  if (!packageNameFromURL || !packageNames.includes(packageNameFromURL)) {\n    return {\n      packageName: PACKAGE_NAMES.RN,\n      isPackageNameDefinedInURL: false\n    }\n  }\n\n  return {\n    packageName: packageNameFromURL,\n    isPackageNameDefinedInURL: true\n  }\n}\n","import { LANGUAGE_NAMES } from '../constants'\n\nexport const useGetLanguageFromURL = () => {\n  const urlParams = new URLSearchParams(window.location.search)\n\n  const languageFromURL = urlParams.get('language')\n  const languageNames = Object.values(LANGUAGE_NAMES)\n\n  if (!languageFromURL || !languageNames.includes(languageFromURL)) {\n    return LANGUAGE_NAMES.CPP\n  }\n\n  return languageFromURL\n}\n","import React from 'react'\nimport Home from './components/pages/Home'\n\nconst App = () => <Home />\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nconst container = document.getElementById('root')\nconst root = createRoot(container)\nroot.render(<App />)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","export const DEFAULT_APP_NAME = 'RnDiffApp'\n\nexport const PACKAGE_NAMES = {\n  RN: 'react-native',\n  RNM: 'react-native-macos',\n  RNW: 'react-native-windows'\n}\n\nexport const LANGUAGE_NAMES = {\n  CPP: 'cpp',\n  CS: 'cs'\n}\n\nexport const RN_DIFF_REPOSITORIES = {\n  [PACKAGE_NAMES.RN]: 'react-native-community/rn-diff-purge',\n  [PACKAGE_NAMES.RNM]: 'acoates-ms/rnw-diff',\n  [PACKAGE_NAMES.RNW]: 'acoates-ms/rnw-diff'\n}\n\nexport const RN_CHANGELOG_URLS = {\n  [PACKAGE_NAMES.RN]:\n    'https://github.com/facebook/react-native/blob/main/CHANGELOG.md',\n  [PACKAGE_NAMES.RNM]:\n    'https://github.com/microsoft/react-native-macos/releases/tag/',\n  [PACKAGE_NAMES.RNW]:\n    'https://github.com/microsoft/react-native-windows/releases/tag/react-native-windows_'\n}\n","import { PACKAGE_NAMES } from '../constants'\n\nconst versionsWithContent = {\n  [PACKAGE_NAMES.RN]: [\n    '0.69',\n    '0.68',\n    '0.64',\n    '0.62',\n    '0.61',\n    '0.60',\n    '0.59',\n    '0.58',\n    '0.57'\n  ],\n  [PACKAGE_NAMES.RNM]: [],\n  [PACKAGE_NAMES.RNW]: []\n}\n\nconst getReleaseVersionFiles = packageName =>\n  versionsWithContent[packageName].map(version => ({\n    ...require(`./${packageName}/${version}`).default,\n    version\n  }))\n\nexport default {\n  [PACKAGE_NAMES.RN]: getReleaseVersionFiles(PACKAGE_NAMES.RN),\n  [PACKAGE_NAMES.RNM]: getReleaseVersionFiles(PACKAGE_NAMES.RNM),\n  [PACKAGE_NAMES.RNW]: getReleaseVersionFiles(PACKAGE_NAMES.RNW)\n}\n","import { PACKAGE_NAMES } from '../../constants'\n\nconst fixtureVersions = ['0.59', '0.58', '0.57', '0.56']\n\njest.setMock('../index.js', {\n  [PACKAGE_NAMES.RN]: fixtureVersions.map(version => ({\n    version\n  }))\n})\n"],"sourceRoot":""}